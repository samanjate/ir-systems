QUERY:
What articles exist which deal with TSS (Time Sharing System), an operating system for IBM computers? 

SNIPPETS:

An Experimental Comparison of TIME SHARING and Batch Processing. The effectiveness for program development of the MIT Compatible TIME-SHARING SYSTEM (CTSS)  was compared with that of the IBM IBSYS batch-processing SYSTEM by means of a statistically designed  experiment.An identical set of four programming problems was assigned to each of a group of four programming  subjects 
CACM-1605

GEORGE 3-A General Purpose TIME SHARING and OPERATING System1900, and can handle a large number of online console users while at the same TIME running several  off line (background) jobs An OPERATING SYSTEM is described which will run on a wide variety of configurations of the  I â€¦
CACM-1519

Experimental Personalized Array Translator SYSTEM A SYSTEM designed for intimate man-machine interaction in a general-purpose problem-solving  environment is experimentally operationalThe SYSTEM utilizers an array-oriented symbolic source language  containing powerful statement types 
CACM-1033

The LACONIQ Monitor: TIME SHARING for Online Dialogues The LACONIQ (Laboratory Computer Online Inquiry) Monitor was developed primarily to support  non-numerical applications such as retrieval from very large files by means of a "dialogue" between a  SYSTEM user and a retrieval applicationAn unusual  feature of the SYSTEM is that it is event-driven rather than clock-driven 
CACM-1506

Some Criteria for Time-Sharing SYSTEM Performance Time-sharing systems, as defined in this article, are those multiaccess systems which permit  a terminal user to utilize essentially the full resources of the SYSTEM while SHARING its TIME with other  terminal usersIt is each terminal user's ability to utilize the full resources of the SYSTEM that  makes quantitative evaluation of time-sharing systems particularly difficult 
CACM-1938

A Model for a Multifunctional Teaching SYSTEM A teaching SYSTEM model that was incorporated into an OPERATING SYSTEM of a large computer  is describedThe model transferred control to the OPERATING SYSTEM to execute functions other than  teaching, and then recovered control in order to resume teaching 
CACM-1591

Interarrival Statistics for TIME SHARING Systems The optimization of time-shared SYSTEM performance requires the description of the stochastic  processes governing the user inputs and the program activityThe input process  is assumed to be stationary, and to be defined by the interarrival TIME distribution 
CACM-1410

Tele-CUPL: A Telephone TIME SHARING SYSTEM A general purpose, remote access, computing SYSTEM is described, that employs twelve-key keyboard  telephones as terminalsAudio output is provided directly to the telephone terminals, but the SYSTEM  will normally be used in conjunction with remotely located high speed printing devices 
CACM-1544

Initial Experience With an OPERATING Multiprogramming SYSTEM The Lewis Research Center has been using various forms and degrees of program simultaneity  in the operation of its modified Sperry-Rand Univac Scientific Model 1103 computer during the last five  yearsThis simultaneity has evolved from an initial achievement of self-searching input and output  to the automatic TIME SHARING of independently coded problems 
CACM-0585

A SYSTEM for Interprocess Communicationin a Resource SHARING Computer Networkinterprocess communication, time-sharing, computer networks, resource SHARING  3 A SYSTEM of communication between processes in a time-sharing SYSTEM is described and the communication  SYSTEM is extended so that it may be used between processes distributed throughout a computer network 
CACM-2371



QUERY:
Intermediate languages used in construction of multi-targeted compilers; TCOLL 

SNIPPETS:

A NELIAC-Generated 7090-1401 CompilerThis experience has shown there is no inherent difficulty in "building  COMPILERS with compilers"; indeed, it pointed out many advantages in using a POL for constructing programming  systems NELIAC systems for several different machines have been generated using the original NELIAC  system developed at the Naval Electronics Laboratory, San Diego, in 1958 
CACM-0637

Programming a Duplex Computer System This paper describes a method of duplex-computer programming that has been used with two computers  in a military defense systemThe method combines special programs with a basic data processing program  package 
CACM-0252

Orderly Enumeration of Nonsingular BinaryMatrices Applied to Text EncryptionEach natural number corresponds  to two INTERMEDIATE vectorsExamples of  complete enumeration of all 2 x 2 and 3 x 3 nonsingular binary matrices were produced by mapping the  INTERMEDIATE vectors to the matrices 
CACM-3115

A Marovian Model of the University of Michigan Executive System A mathematical model of a computer's executive system is postulated and its parameters estimated  with the aid of extensive data on the system's operationAlthough simplifying assumptions are made,  the results predicted by the model agree reasonable well with actual results 
CACM-1533

Partial Step Integration A partial step integration equation is derived for use with the Adams or Adams-Bashforth method  of integration of differential equationsThis method of obtaining functional values at points INTERMEDIATE  to the integration points yields accuracy comparable to the integration and does not require storing  of additional information as in interpolation methods 
CACM-1402

Semantic Evaluation from Left to Right This paper describes attribute grammars and their use for the definition of programming LANGUAGES  and compilers; a formal definition of attribute grammars and a discussion of some of its important aspects  are includedThe paper concentrates on the evaluation of semantic attributes in a few passes from left  to right over the derivation tree of a program 
CACM-2886

CURRICULUM '78 - Recommendations for theUndergraduate Program in Computer Science Contained in this report are the recommendations for the undergraduate degree program in Computer Science of the Curriculum Committee on Computer Science (C3S) of the Association for Computing Machinery (ACM)The core curriculum common to all computer science undergraduate programs is presented in terms of elementary level topics and courses, and INTERMEDIATE level courses 
CACM-3130

Some Effects of the 6600 Computer on Language Structures* The problem of compiling efficient 6600 codes prompted the development of an INTERMEDIATE language  reflecting the structure of the machine, that is more easily manipulated in improving object program  efficiencyThe subject of this paper is the INTERMEDIATE language and methods of manipulating it 
CACM-1134

Solution of Systems of Polynomial Equations By Elimination The elimination procedure as described by Williams has been coded in LISP and FORMAC and used  in solving systems of polynomial equationsIt is found that the method is very effective in the case  of small systems, where it yields all solutions without the need for initial estimates 
CACM-1387

In-and-Out Conversions Byan in-and-out conversion we mean that a floating-point number in one base is converted into  a floating-point number in another base and then converted back to a floating-point number in the original  baseFor all combinations of rounding and truncation conversions the question is considered of how  many significant digits are needed in the INTERMEDIATE base to allow such in-and-out conversions to return  the original number (when possible), or at least significant digit 
CACM-1783

QUERY:
I'm interested in mechanisms for communicating between disjoint processes, possibly, but not exclusively, in a distributed environment. I would rather see descriptions of complete mechanisms, with or without implementations, as opposed to theoretical work on the abstract problem. Remote procedure calls and message-passing are examples of my interests. 

SNIPPETS:

Synchronization with Eventcounts and Sequencers Synchronization of concurrent PROCESSES requires controlling the relative  ordering of events in the processesA new synchronization mechanism is proposed, using  ABSTRACT objects called eventcounts and sequencers, that allows PROCESSES to control the ordering of events directly, rather than using mutual exclusion to protect manipulations of shared variables that control ordering of events 
CACM-3128

The Digital Simulation of River Plankton Population DynamicsIn order to study the relationships between the ecological MECHANISMS involved, the  simulation parameters were varied illustrating the response of the ecosystem to different conditions,  including those corresponding to certain types of chemical and thermal pollution This paper deals with the development of a mathematical model for and the digital simulation  in Fortran IV of phytoplankton and zooplankton population densities in a river using previously developed  rate expressions 
CACM-2721

Interference Between COMMUNICATING Parallel PROCESSES Various kinds of interference between COMMUNICATING parallel PROCESSES have been examined by  Dijkstra, Knuth, and othersSolutions have been given for the mutual exclusion PROBLEM and associated  subproblems, in the form of parallel programs, and informal proofs of correctness have been given for  these solutions 
CACM-2342

On the PROBLEM of COMMUNICATING Complex Information The nature of the difficulty involved in COMMUNICATING mathematical results between scientists  using a computer based information retrieval system is examinedThe PROBLEM is analyzed in terms of  psychological and information-processing processes, and what turns out to be a vicious circle of effects  is described 
CACM-2519

Abstraction MECHANISMS in CLUCLU provides, in addition to procedures, novel linguistic MECHANISMS that support the use of data and  control abstractionsThis paper provides an in troduction to the abstraction MECHANISMS in CLU 
CACM-2939

A Hardware Architecture for Implementing Protection RingsThus, a call by a user PROCEDURE to a protected subsystem (including the supervisor) is identical  to a call to a companion user PROCEDURE Protection of computations and information is an important aspect of a computer utility 
CACM-2377

An Improved Algorithm for Decentralized Extrema-Findingin Circular Configurations of PROCESSES This note presents an improvement to LeLann's algorithm for finding the largest (or smallest) of a set of uniquely numbered PROCESSES arranged in a circle, in which no central controller exists and the number of PROCESSES is not known a prioriThis decentralized algorithm uses a technique of selective message extinction in order to achieve an average number of message passes of order (n log n) rather than O(n2) 
CACM-3141

Logic and Programming Languages Logic has been long in terested in whether answers to certain questions are computable in principle,  since the outcome puts bounds on the possibilities of formalizationMore recently, precise comparisons  in the efficiency of decision methods have become available through the developments in complexity theory 
CACM-2931

DISTRIBUTED Processes: A Concurrent Programming Concept A language concept for concurrent PROCESSES without common variables is introducedThese  PROCESSES communicate and synchronize by means of PROCEDURE CALLS and guarded regions 
CACM-3043

A Lattice Model of Secure Information Flow This paper investigates MECHANISMS that guarantee secure information flow in a computer systemThese MECHANISMS are examined within a mathematical framework suitable for formulating the requirements  of secure information flow among security classes 
CACM-2870

QUERY:
I'd like papers on design and implementation of editing interfaces, window-managers, command interpreters, etc. The essential issues are human interface design, with views on improvements to user efficiency, effectiveness and satisfaction. 

SNIPPETS:

Conversational Access to a 2048-Word MachineIt focuses on the preparation and EDITING  of continuously displayed 23,040-character text strings (manuscripts) which can be positioned anywhere by the USER and edited by simply adding and deleting lines as though working directly on an elastic scrollOther features are available through a uniform COMMAND set which itself can  be augmented by the USER 
CACM-2035

An Interactive Software System for Computers-AidedDesign:  An Application to Circuit ProjectThe main emphasis is given to the description of the features of the two high level USER oriented languages, operating at different levels, on which the interaction is basedThe first one is IMOL, an interactive monitor language, which is designed to perform the overall and control functions of the software system; its DESIGN criteria provide the USER with commands which are both simple and efficient in order to perform all the functions needed in computer-aided circuit DESIGN 
CACM-2003

An Interactive Graphical Display Monitor ina Batch-Processing Environment with Remote EntryThe graphic monitor is a resident auxiliary monitor  which provides comprehensive managerial capability over the graphical system in response to commands  from the HUMAN userIt also will respond to commands from a USER program through a similar interface,  where routine calls take the place of manual actions 
CACM-1829

Computer-Aided Analysis and DESIGN of Information Systems This paper describes the use of computer-aided analysis for the DESIGN and development of an  integrated financial management system by the Navy Material COMMAND Support Activity (NMCSA)Computer-aided  analysis consists of a set of procedures and computer programs specifically designed to aid in the process  of applications software design, computer selection and performance evaluation 
CACM-2812

An Extensible Editor for a Small Machine with Disk Storage A DESIGN philosophy for developing a sophisticated utility program is illustrated by the actual  DESIGN and IMPLEMENTATION of a text editorSuch a data structure  is described, and its merits are illustrated by the ease with which powerful extensions can be implemented  in terms of a few basic EDITING function 
CACM-2299

A Model for Automating File and Program DESIGN in Business Application Systems This paper discusses a model for finding an efficient IMPLEMENTATION of a  business application system whose logical specifications have been determined in advanceThe model VIEWS file and program DESIGN as a problem of systematically coordinating the configurations of datasets and computations 
CACM-3147

A Software DESIGN and Evaluation System A critical failure of current software system DESIGN and IMPLEMENTATION methodology is that  the performance of a proposed DESIGN is not evaluated before it is actually implementedA system which integrates performance evaluation with DESIGN and IMPLEMENTATION is described 
CACM-2542

Automation of Etching-Pattern Layout HELP (Heuristic Etching-Pattern Layout Program) is an application program developed to computerize  the tedious and error-prone although vitally important wiring DESIGN of printed circuit boardsHELP  helps automate a DESIGN stage one step closer to production than logical DESIGN 
CACM-2145

A Phonological Rule TesterIt permits the USER to define, on-line, sets of rules  statable within the framework presented in The Sound Patterns of English by Chomsky and Halle, 1968,  to define phonemes as bundles of specified distinctive features, to define data as strings of phonemes  with associated grammatical structure, to test the effect of applying rules to the data, and to store  both the definitions and resultsThe system is written in BBN LISP on the Scientific Data System 940 computer and is designed to be used  on-line in interactive fashion, with control returned to the USER after each COMMAND is executed 
CACM-1671

LG: A Language for Analytic Geometry A conversational programming language for analytic geometry is described, together with some  aspects of its implementationThe language allows the flexible definition of geometric objects and  elements, computes their parameters, and displays the results 
CACM-2873

QUERY:
Interested in articles on robotics, motion planning particularly the geometric and combinatorial aspects. We are not interested in the dynamics of arm motion. 

SNIPPETS:

Interactive Skeleton Techniques for EnhancingMotion DYNAMICS in Key Frame Animation A significant increase in the capability for controlling MOTION DYNAMICS in key frame animation  is achieved through skeleton controlThis technique allows an animator to develop a complex MOTION  sequence by animating a stick figure representation of an image 
CACM-2826

Computer Formulation of the Equations of MOTION Using Tensor NotationTo illustrate the  techniques involved, a digital computer has been used to derive the equations of MOTION of a point mass  in a general orthogonal curvilinear coordinate systemWith the program prepared for this purpose the computer will  derive the equations of MOTION in any coordinate system requested by the user 
CACM-1543

Computer Simulation Of City Traffic In simulating traffic flow on city streets, the National Bureau of Standards has used data  processing techniques to tabulate and make MOTION pictures of vehicle movements in the modelEach vehicle  is assigned a digital identification giving points of entry and exit, type of vehicle, desired speed,  and actual speed, in proportions simulating field data 
CACM-0605

Hierarchical GEOMETRIC Models for Visible Surface Algorithms The GEOMETRIC structure inherent in the definition of the shapes of three-dimensional objects  and environments is used not just to define their relative MOTION and placement, but also to assist in  solving many other problems of systems for producing pictures by computerBy using an extension of  traditional structure information, or a GEOMETRIC hierarchy, five significant improvements to current  techniques are possible 
CACM-2828

Eliminating Monotonous Mathematics with FORMAC The FORMAC (FORmula MAnipulation Compiler) programming system provides a powerful tool for  performing mathematical analysisIt is an extension of FORTRAN IV which permits the use of the computer  to perform the tedious algebraic computations that arise in many different fields 
CACM-1365

Person-Matching by Electronic Methods Record linkage in the updating of files is accomplished in many establishments through the  use of a preassigned number, such as payroll number, customer number, or social security numberIn  vital and health records, however, a unique number is generally not preassigned to an individual for  purposes of reporting services received to the health department 
CACM-0531

An Algorithm for Deriving the Equations ofMathematical Physics by Symbolic Manipulation A method is described whereby a digital computer can be used to derive the equations of mathematical  physics in any curvilinear coordinate system requested by the userThe effectiveness of the technique  is demonstrated by using it to derive the Navier-Stokes equations of fluid MOTION and the continuity  equation 
CACM-1664

Machine Controls for Analysis of Variance A major problem in using the analysis of variance, as the number of factors increases, is the  exponential rise in the number of interactionsEven though the experimenter may not be INTERESTED in  these interactions it is impossible to ignore them in most experimental designs because of the problem  of getting error terms 
CACM-1014

Use of the Disk File on Stretch The paper begins by briefly describing the Stretch (IBM 7030) computer with special emphasis  given to the organization and operation of its input-output equipmentPhysical characteristics of the  two-disk system (4,194,304 72-bit words, 8 usec-per-word transmission rate, etc 
CACM-0695

An Application of FORMAC A nonlinear circuit analysis problem is stated and the way in which it was solved using FORMAC  is indicatedThe solution of the problem using FORMAC was notable since several other methods that  were tried failed 
CACM-1623

QUERY:
I am interested in distributed algorithms - concurrent programs in which processes communicate and synchronize by using message passing. Areas of particular interest include fault-tolerance and techniques for understanding the correctness of these algorithms. 

SNIPPETS:

DISTRIBUTED Processes: A CONCURRENT Programming Concept A language concept for CONCURRENT PROCESSES without common variables is introducedThese  PROCESSES COMMUNICATE and SYNCHRONIZE by means of procedure calls and guarded regions 
CACM-3043

A CORRECTNESS Proof of a Topology InformationMain tenance Protocol for a DISTRIBUTED Computer NetworkA CORRECTNESS  proof of this Topology Information Protocol is also presenteddistributed computer network, CORRECTNESS proofs, computer networks, DISTRIBUTED control, network  topology, routing problem in networks, DISTRIBUTED operating system, store and forward packet switching,  store and forward MESSAGE switching, traffic control  3 
CACM-2949

An Improved Algorithm for Decentralized Extrema-Findingin Circular Configurations of PROCESSES This note presents an improvement to LeLann's algorithm for finding the largest (or smallest) of a set of uniquely numbered PROCESSES arranged in a circle, in which no central controller exists and the number of PROCESSES is not known a prioriThis decentralized algorithm uses a technique of selective MESSAGE extinction in order to achieve an average number of MESSAGE passes of order (n log n) rather than O(n2) 
CACM-3141

Synchronization with Eventcounts and Sequencers Synchronization of CONCURRENT PROCESSES requires controlling the relative  ordering of events in the processesA new synchronization mechanism is proposed, using  abstract objects called eventcounts and sequencers, that allows PROCESSES to control the ordering of events directly, rather than using mutual exclusion to protect manipulations of shared variables that control ordering of events 
CACM-3128

Interference Between Communicating Parallel ProcessesSolutions have been given for the mutual exclusion problem and associated  subproblems, in the form of parallel programs, and informal proofs of CORRECTNESS have been given for  these solutionsA mechanical  proof procedure is shown, which will either verify (prove the CORRECTNESS of ) or discredit (prove the  incorrectness of) an attempted solution, with respect to any of the interference properties 
CACM-2342

CONCURRENT Reading and WritingIt is assumed that only  one process at a time can modify the data, but CONCURRENT reading and writing is permittedThese INCLUDE a solution  to the general problem in which a read is repeated if it might have obtained an incorrect result, and  two TECHNIQUES for transmitting messages between PROCESSES 
CACM-2912

On Quadratic Adaptive Routing ALGORITHMS Two analytic models of a store-and-forward communications network are constructed, one to find  the optimal MESSAGE routing and the other to illustrate the equilibrium (stationary state) maintained  by an adaptive routing algorithmrouting algorithms, adaptive routing, quadratic routing, alternate routing, store-and-forward network,  DISTRIBUTED network, computer network, MESSAGE switching  3 
CACM-2890

Multiprogramming STRETCH: Feasibility ConsiderationsTechniques are described which place the burden of the programmed logic on system PROGRAMS (supervisory  program and compiler) rather than on problem programsMinimum requirements  for successful CONCURRENT execution of several independent problem PROGRAMS are discussed 
CACM-0046

Performance Evaluation of Highly ConcurrentComputers by Deterministic Simulation Simulation is presented as a practical technique for performance evaluation of alternative  configurations of highly CONCURRENT computersPerformance evaluation, deterministic simulation, control stream, CONCURRENT computers  6 
CACM-3048

On the Problem of Communicating Complex Information The nature of the difficulty involved in communicating mathematical results between scientists  using a computer based information retrieval system is examinedThe problem is analyzed in terms of  psychological and information-processing processes, and what turns out to be a vicious circle of effects  is described 
CACM-2519

QUERY:
Addressing schemes for resources in networks; resource addressing in network operating systems 

SNIPPETS:

Capability-Based ADDRESSING Various ADDRESSING SCHEMES making use of segment tables are examinedThe inadequacies of  these SCHEMES when dealing with shared addresses are explained 
CACM-2625

A Process for the Determination ofAddresses in Variable Length ADDRESSING An algorithm is presented for the assignment of instruction addresses and formats under the  following conditions: (1) the length of the instruction varies as a function of the distance of the instruction  from its target; (2) there exists an optimality criterion which implies some preferential choices subject  to the ADDRESSING constraintsThis may be, for example, achieving the smallest number of long instructions,  in which case the total code length is minimized, or minimizing the assigned address of a specified point  in the program 
CACM-2858

Block Structures, Indirect Addressing, and Garbage Collection Programming languages have included explicit or implicit block structures to provide a naming  convenience for the programmerHowever, when indirect ADDRESSING is used, as in SNOBOL, naming constraints  may be introduced 
CACM-1869

Reverse Path Forwarding of Broadcast Packets A broadcast packet is for delivery to all nodes of a networkAlgorithms for accomplishing  this delivery through a store-and-forward packet switching  computer NETWORK include (1) transmission  of separately addressed packets 
CACM-3032

How To Keep the Addresses Short An algorithm is presented for minimizing the sum of the lengths of the blocks of coding produced  by an assembler or compiler when (1) the length of each computer instruction is assumed to be either  "long" or "short" ("long," if the memory location addressed is more than a predetermined distance from  the current location; "short," otherwise), and (2) there are blocks of instructions whose beginnings  (origins) are separated by prespecified amountsFor example, some computers permit either 8-bit ADDRESSING  (interpreted relative to the location counter) or full 16-bit ADDRESSING of all of memory 
CACM-2194

ADDRESSING an Array Yi in k-Dimensionsby Fortran for Analysis of Variance CACM March, 1963  Garber, MJ 
CACM-0912

Storage Organization in Programming Systemsstorage allocation, storage organization, storage control, codewords, data representation, program  representation, data structures, storage protection, ADDRESSING mechanisms, paging, segmentation, file  handling  4 The system of program and data representation that has been in use on the Rice University computer  for five years is described 
CACM-1677

An Overview of the ISPL Computer System Design This paper explores the advantages of the concurrent design of the language, OPERATING system,  and machine (via microcode) to create an interactive programming laboratoryThis freedom simplified both incremental compilation  and the system's ADDRESSING structure, and centralized the communication mechanisms enabling the construction  of hierarchical subsystems 
CACM-2541

A Practitioner's Guide To ADDRESSING Algorithms This paper consolidates a number of popular rules of thumb which have been suggested for the design of record ADDRESSING algorithms, and discusses the applicability of these rules to large commercial  databasesdata management, file retrieval, searching, ADDRESSING techniques, hashing functions, synonym resolution,  loading factor, bucket size, heuristic design, rules of thumb  3 
CACM-2860

Improving the Access Time for Random Access Files Clustering in the key set is decreased by smoothing the key-to-address transformation, and  by adding shadow buckets to an open chaining fileThe keys are pre-hashed before the address division,  to remove the effect of sequential properties in the key set 
CACM-2991

QUERY:
Security considerations in local networks, network operating systems, and distributed systems. 

SNIPPETS:

On the Implementation of SECURITY Measures in Information SystemsThe model is used to explain  SECURITY features of several existing systems, and serves as a framework for a proposal for general SECURITY  system implementation within today's languages and OPERATING systemssecurity, privacy, access control confidentiality, OPERATING systems, access management, data banks,  management information SYSTEMS  3 
CACM-2372

A High SECURITY Log-in Procedure The protection of time sharing SYSTEMS from unauthorized users is often achieved by the use  of passwordsBy using one-way ciphers to code the passwords, the risks involved with storing the passwords  in the computer can be avoided 
CACM-2621

A Model for Verification of Data SECURITY in OPERATING SYSTEMS Program verification applied to kernel architectures forms a promising method for providing  uncircumventably secure, shared computer systemsA precise definition of data SECURITY is developed  here in terms of a general model for OPERATING SYSTEMS 
CACM-3068

Advanced Cryptographic Techniques for Computerscryptographic, cryptanalysis, ciphers secrecy systems, SECURITY systems, confidential information  processing  1 Cryptographic techniques which can be used to maintain the confidentiality of information processed  by computers are dealt with 
CACM-1808

Three Criteria for Designing Computing SYSTEMS to Facilitate Debuggingcomputer design, computer design criteria, computer systems, computer SYSTEMS design, input equipment,  input equipment design, OPERATING systems, OPERATING SYSTEMS design, multiprogramming, multiprogrammed  systems, multiprogrammed system design, virtual computers, programming languages, programming language  design, program semantics, programming language semantics, determinism, reproducibility, repeatability,  deterministic computers, protection, memory protection, information security, information privacy, computing  reliability, debugging, program debugging, program testing, parallel processing, parallel programming,  multiprocessing  2 The designer of a computing system should adopt explicit criteria for accepting or rejecting  proposed system features 
CACM-1747

Value Conflicts and Social Choice in ElectronicFunds Transfer System Developments During the last few years, computer-based SYSTEMS which automate the transfer and recording  of debits and credits have begun to be implemented on a large scaleThese SYSTEMS promise both financial  benefits for the institutions that use them and potential conveniences to their customers 
CACM-3076

Exclusive Simulation of Activity in Digital NETWORKS A technique for simulating the detailed logic NETWORKS of large and active digital SYSTEMS  is describedCertain aspects  of the techniques described may be used for the simulation of NETWORK structures other than digital NETWORKS 
CACM-1928

Password Security: A Case History This paper describes the history of the design of the password SECURITY scheme on a remotely accessed time-sharing systemThe present design was the result of countering observed attempts to penetrate the system 
CACM-3174

A Lattice Model of Secure Information FlowThe lattice properties  permit concise formulations of the SECURITY requirements of different existing SYSTEMS and facilitate  the construction of mechanisms that enforce securityThe model provides a unifying view of all SYSTEMS  that restrict information flow, enables a classification of them according to SECURITY objectives, and  suggests some new approaches 
CACM-2870

A Position Paper on Computing and Communications The effective operation of free enterprise in creating the envisioned information service industry  is dependent upon three accomplishments: (1) the restructuring of our information processing industry  so that a clear division of costs is made among computing, communications, and the development of information  services; (2) the wide use of multiaccess system concepts so that information services may share in the  use of computer installations and so that the cost of their construction is reasonable; and (3) the development  of public, message-switched communications services so that adequate provisions are made for information  securityCACM May, 1968  Dennis, J 
CACM-1745

QUERY:
Parallel languages; languages for parallel computation 

SNIPPETS:

Merging with PARALLEL Processors Consider two linearly ordered sets A, B, |A|=m, |B|=n, m<=n, and p, p<=m, PARALLEL processors  working synchronouslyThe paper presents an algorithm for merging A and B with the p PARALLEL processors,  which requires at most 2[log2 (2m+1)]+[3m/p] + [m/p][log2 (n/m)] steps 
CACM-2714

Glypnir-A Programming Language for Illiac IVGLYPNIR, Illiac IV, Programming language, PARALLEL computation, PARALLEL architecture  4This paper describes the characteristics,  goals and philosophy of the language, and discusses some of the problems associated with PARALLEL computer  architectures 
CACM-2785

Procedure-Oriented Language Statements to Facilitate PARALLEL Processing Two statements are suggested which allow a programmer writing in a procedure-oriented language  to indicate sections of program which are to be executed in parallelThe statements are DO TOGETHER  and HOLD 
CACM-1262

A Highly PARALLEL Algorithm for ApproximatingAll Zeros of a Polynomial with Only Real ZerosThe algorithm, which is conceptually suitable for PARALLEL computation,  determines its own starting values so that convergence to the zeros is guaranteedparallel numerical algorithms, real polynomials, real zeros, Newton's method, starting values,  guaranteed convergence  5 
CACM-2266

Reduction: A Method of Proving Properties of PARALLEL Programs When proving that a PARALLEL program has a given property it is often convenient to assume  that a statement is indivisible, ie 
CACM-2700

Sorting on a Mesh-Connected PARALLEL Computer Two algorithms are presented for sorting n^2 elements on an n X n mesh-connected processor  array that require O(n) routing and comparison stepsThe best previous algorithm takes time O(n log  n) 
CACM-2973

The PARALLEL Execution of DO Loops Methods are developed for the PARALLEL execution of different iterations of a DO loopparallel computing, multiprocessor computers, array computers, vector computers, loops  4 
CACM-2685

Program Structures for PARALLEL Processing Constructs for organizing and explicating PARALLEL program segments are discussed as extensions  to ALGOL 60The constructs serve as meta-commands and are motivated by equipment having multiprocessing  capability 
CACM-1158

Models for PARALLEL Processing WIthin Programs:Application to CPU:I/O and I/O:I/O Overlap Approximate queueing models for internal PARALLEL processing by individual programs in a multiprogrammed  system are developed in this paperMultiprogramming, PARALLEL processing, queueing network models, multiprocessing of COMPUTATION  and I/O   4 
CACM-3059

PARALLEL Methods for Integrating Ordinary Differential Equations This paper is dedicated to the proposition that, in order to take full advantage for real-time  computations of highly PARALLEL computers as can be expected to be available in the near future, much  of numerical analysis will have to be recast in a more "parallel" formBy this is meant that serial  algorithms ought to be replaced by algorithm which consist of several subtasks which can be computed  without knowledge of the results of the other subtasks 
CACM-0950

QUERY:
SETL, Very High Level Languages 

SNIPPETS:

Automatic Data Structure Choice in a Language of Very HIGH LEVEL SETL is a set-theoretically oriented language of very HIGH LEVEL whose repertoire of semantic  objects includes finite sets, ordered n-tuples, and sets of ordered n-tuples usable as mappingsThis  paper describes the structure of an optimizer for this language 
CACM-2699

Pseudofiles An approach to system interfaces for HIGH LEVEL LANGUAGES using basic input/output support  facilities is describedoperating systems, interfaces input-output, HIGH LEVEL languages, command language  4 
CACM-1923

A Very HIGH LEVEL Programming Language for Data Processing Applicationsvery HIGH LEVEL language, nonprocedural language, data flow language, business application, business  data processing, structured programming, modular programming, format specification, and design methodology  3 Application development today is too labor-in tensive 
CACM-2906

CONVERT: A HIGH LEVEL TranslationDefinition Language for Data Conversion This paper describes a HIGH LEVEL and nonprocedural translation definition language, CONVERT,  which provides very powerful and highly flexible data restructuring capabilitiesdata conversion, data restructuring, data translation, database reorganization, translation definition,  utility program, programming languages, nonprocedural LANGUAGES  3 
CACM-2717

Line Numbers Made Cheap A technique is described for run-time line number administration to be used for implementations of HIGH LEVEL languagesUnder suitable circumstances, this method requires absolutely no overhead, in either time or space, during execution of the program 
CACM-3171

Implementation of HIGH LEVEL Language Machine Computing machines which directly execute the statements of a HIGH LEVEL language have been  proposed in the pastcomputer architecture, HIGH LEVEL language machine, emulators, microprogramming, interpreters,  execution speed, APL  4 
CACM-2527

HIGH LEVEL Programming for Distributed ComputingThis paper describes an approach to distributed computing at the LEVEL of general purpose programming languagesBased on primitive notions of module, message, and transaction key, the methodology is shown to be independent of particular LANGUAGES and machines 
CACM-3148

Programming Languages: History and Future This paper discusses both the history and future of programming LANGUAGES (= higher LEVEL languages)programming languages, higher LEVEL languages, languages, history, future directions, language  interrelationships, programming language tree, programming language history, programming language future  1 
CACM-2316

Beyond Programming LanguagesJust as HIGH LEVEL LANGUAGES enabled the programmer to escape from the intricacies of a machine's order code, higher LEVEL programming systems can provide the means to understand and manipulate complex systems and components As computer technology matures, our growing ability to create large systems is  leading to basic changes in the nature of programming 
CACM-3150

A Profile of the ProgrammerA very HIGH percentage of programmers have apparently  entered their careers by accident; it has proven a happy choice for most and they expect to remain in  the field during the next five yearsTheir principal job satisfactions relate to the nature of their  work, and mostfind their jobs offer HIGH LEVEL of professional interest and good working conditions 
CACM-0724

QUERY:
portable operating systems 

SNIPPETS:

Thoth, a PORTABLE Real-Time OPERATING System  Thoth isa real-time OPERATING system which is designed to be PORTABLE over a large set of machinesHence, application programs which use Thoth are  highly PORTABLE 
CACM-3127

Levels of Language for PORTABLE Software An increasing amount of software is being implemented in a PORTABLE formportable software, level of language, machine independent, macro processor, efficiency  4 
CACM-2246

A Model for Verification of Data Security in OPERATING SYSTEMS Program verification applied to kernel architectures forms a promising method for providing  uncircumventably secure, shared computer systemsA precise definition of data security is developed  here in terms of a general model for OPERATING SYSTEMS 
CACM-3068

Extremely PORTABLE Random Number Generator Extremely PORTABLE subroutines are sometimes needed for which moderate quality and efficiency  sufficeAn extremely  PORTABLE 8-line FORTRAN program is provided which based on an important paper by Coveyou and MacPherson  (1967)sing their methods, Fourier analysis is applied to the probability function for the consecutive  n-tuples provided by our generator (with n less than or equal to 4) 
CACM-1930

Discussion Summary on OPERATING SYSTEMS 
CACM-1461

Considerations in the Design of a MultipleComputer System with Extended Core Storagemultiple computer systems, extended core storage, multiprogrammed OPERATING systems, multiprocessor  OPERATING systems, control data corporation 6600, OPERATING system with ECS  4 The use of large quantities of addressable (but not executable) fast random access memory to  heighten the multiprogramming performance of a multicomputer system is discussed 
CACM-1750

A General-Purpose Display Processing and Tutorial System ADEPT (A display-Expedited Processing and Tutorial) system is describedThis system was designed  to improve man-computer communications by employing a display unit to interleave tutoring with other  computer operations such as simulation, programming, and information retrieval 
CACM-1680

On the Implementation of Security Measures in Information SystemsThe model is used to explain  security features of several existing systems, and serves as a framework for a proposal for general security  system implementation within today's languages and OPERATING systemssecurity, privacy, access control confidentiality, OPERATING systems, access management, data banks,  management information SYSTEMS  3 
CACM-2372

An OPERATING Environment for Dynamic-RecursiveComputer Programming SYSTEMS Presented in this paper is a brief nontechnical introduction to OEDIPUS, a computer programming  system which can serve as an OPERATING environment for dynamic and/or recursive programs and programming  systemsThe available services include dynamic allocation of storage for contiguous blocks of arbitrary  size, input and output for a hierarchy of data types, a public pushdown list for automatic recursive  programming, a rudimentary compiler for subroutine communication and bookkeeping, and debugging aids 
CACM-1247

Comments on a Paper by Wallace and Mason CACM April, 1970  Heess Jr, W 
CACM-2069

QUERY:
code optimization for space efficiency 

SNIPPETS:

Optimal CODE for Serial and Parallel Computationcode optimization, sequencing of operations, detection of common subexpressions  4 CACM December, 1969  Fateman, R 
CACM-1795

A Case Study of a New CODE Generation Technique for Compilerscompiler structure, optimizing compiler, CODE generation, PL/I compiler, concatenation, program  optimization, OPTIMIZATION techniques, data flow analysis  4 Recent developments in optimizing techniques have allowed a new design for compilers to emerge 
CACM-2897

Adapting Optimal CODE Generation for ArithmeticExpressions to the Instruction Sets Available on Present-Day Computersarithmetic expressions, CODE generation, compilers, object-code optimization, register assignment,  trees  4 CACM June, 1973  Stockhausen, P 
CACM-2495

An Algorithm for Reduction of Operator StrengthThese algorithms should fit well into an integrated package of local OPTIMIZATION algorithmscompilers, OPTIMIZATION of compiled code, program analysis, operator strength reduction, test replacement,  strongly connected region  4 
CACM-2904

Object CODE OPTIMIZATION Methods of analyzing the control flow and data flow of programs during compilation are applied  to transforming the program to improve object time efficiencyDominance relationships, indicating which  statements are necessarily executed before others, are used to do global common expression elimination  and loop identification 
CACM-1947

Proving the Correctness of Heuristically Optimized CODE A primary use of the system is as a post OPTIMIZATION step in CODE  generationThe examples demonstrate  that OPTIMIZATION of the genre of this paper can result in substantially faster operation and the saving  of memory in terms of program and stack sizes 
CACM-3080

Index Ranges for Matrix CalculiThis scheme attempts program OPTIMIZATION by transforming the original algorithm  rather than the machine codeThe goal is to automatically generate CODE for handling the tedious address  calculations necessitated by complicated data structures 
CACM-2253

Generation of Optimal CODE for Expressions via Factorization Given a set of expressions which are to be compiled, methods are presented for increasing the  EFFICIENCY of the object CODE produced by first factoring the expressions, ifactorization algorithms, CODE optimization, sequencing of operations, detection of common subexpressions,  factorization of Boolean expressions  4 
CACM-1886

Description of Basic Algorithm in DETAB/65 Preprocessor The basic algorithm for the conversion of decision tables into COBOL CODE is contained in the generator portion of the DETAB/65 preprocessorCore storage is saved by using queueing techniques and extensive  indexing and also by outputting the CODE as it is generated, a line at a time 
CACM-1564

Shifting Garbage Collection Overhead to Compile Time This paper discusses techniques which enable automatic storage reclamation overhead to be partially  shifted to compile timeThe paper assumes a transaction oriented collection scheme, as proposed by  Deutsch and Bobrow, the necessary features of which are summarized 
CACM-2944

QUERY:
find all discussions of optimal implementations of sort algorithms for database management applications 

SNIPPETS:

A Generalized Partial Pass Block SORT The design of a partial pass block SORT with arbitrary range of key and number of work files  is describedThe design is a generalization of the Partial Pass Column SORT by Ashenhurst and the Amphisbaenic  SORT by Nagler 
CACM-1724

Merge SORT Algorithm [M1] (Algorithm A426) CACM May, 1972  Bron, Csort, merge  5 
CACM-2348

Math SORT (Algorithm 23) CACM November, 1960  Feurzeig, W 
CACM-0132

Shuttle SORT (Algorithm 175) CACM December, 1963  Juelich, OC 
CACM-0662

Shuttle SORT (Algorithm 175) CACM October, 1963  Schubert, GR 
CACM-0701

Optimizing the Polyphase SORT (Corrigendum) CACM January, 1972  Shell, DL 
CACM-2397

Shuttle SORT (Algorithm 175) CACM June, 1963  Shaw, CJ 
CACM-0841

Merge SORT Algorithm (R426) CACM December, 1974  Bron, C 
CACM-2563

Fast Parallel Sorting AlgorithmsA procedure  is also presented to SORT n numbers in time O(k log n) using n 1 + 1/k processors, for k an arbitrary  integerParallel processing, sorting, algorithms, bucket SORT  3 
CACM-3075

Length of Strings for a Merge SORT Detailed statistics are given on the length of maximal sorted strings which result form the  first (internal sort) phase of a merge SORT onto tapesIt is shown that the strings produced by an  alternating method (i 
CACM-0677

QUERY:
Find all discussions of horizontal microcode optimization with special emphasis on optimization of loops and global optimization. 

SNIPPETS:

Recursion Analysis for Compiler OPTIMIZATION A relatively simple method for the detection of recursive use of procedures is presented for  use in compiler optimizationImplementation considerations are discussed, and a modification of the  algorithm is given to further improve OPTIMIZATION 
CACM-2835

On the OPTIMIZATION of Performance of Time-Sharing Systems by Simulation A simulation model of a time-sharing system with a finite noncontiguous store and an infinite  auxiliary store is used to study the variation of system parameters such as store size, number of jobs  allowed to execute simultaneously, job-scheduling algorithm, etcThe effects of these variations on  a measure of system performance is used to ascertain which of the parameters controllable by the job-scheduling  algorithm, including the scheduling itself, require optimization, and which of the parameters not normally  controllable by the scheduling algorithm have a marked effect on system performance 
CACM-2344

GLOBAL OPTIMIZATION by Suppression of Partial Redundancies The elimination of redundant computations and the moving of invariant computations out of LOOPS are often done separately, with invariants  moved outward loop by loopWe propose to do both at once and to move each expression directly to the entrance of the outermost loop in which it is invariant 
CACM-3125

The Complex Method for Constrained OPTIMIZATION [E4] (Algorithm A454) CACM August, 1973  Richardson, JA 
CACM-2464

Peephole OPTIMIZATION Redundant instructions may be discarded during the final stage of compilation by using a simple  optimizing technique called peephole optimizationThe method is described and examplesare given 
CACM-1231

An Algorithm for Reduction of Operator StrengthThese algorithms should fit well into an integrated package of local OPTIMIZATION algorithmscompilers, OPTIMIZATION of compiled code, program analysis, operator strength reduction, test replacement,  strongly connected region  4 
CACM-2904

Optimal Code for Serial and Parallel Computation CACM December, 1969  Fateman, RJ 
CACM-1795

Weighted Derivation TreesThe method may be applied to problems involving probabilistic parsing or combinatorial  optimizationderivation tree, parse tree, probabilistic grammar, structural ambiguity, combinatorial OPTIMIZATION  5 
CACM-2836

On the Conversion of Programs to Decision Tables: Method and ObjectivesObjectives of these  conversions are mainly program debugging and OPTIMIZATION in practice The problems of converting programs to decision tables are investigated 
CACM-2616

On the Optimal Detection of Curves in Noisy Picturespicture processing, picture recognition, picture description, curve detection, line detection,  edge detection,optimal detection, heuristic methods, GLOBAL recognition, parallel processing, dynamic  programming, interaction graph, secondary OPTIMIZATION problem  3Due to the GLOBAL approach, greater flexibility and adequacy  in the particular problem is achieved 
CACM-2195

QUERY:
find all descriptions of file handling in operating systems based on multiple processes and message passing. 

SNIPPETS:

An Improved Algorithm for Decentralized Extrema-Findingin Circular Configurations of PROCESSES This note presents an improvement to LeLann's algorithm for finding the largest (or smallest) of a set of uniquely numbered PROCESSES arranged in a circle, in which no central controller exists and the number of PROCESSES is not known a prioriThis decentralized algorithm uses a technique of selective MESSAGE extinction in order to achieve an average number of MESSAGE passes of order (n log n) rather than O(n2) 
CACM-3141

An OPERATING System BASED on the Concept of a Supervisory Computer An OPERATING system which is organized as a small supervisor and a set of independent PROCESSES  are describedoperating systems, supervisors, multiprogramming, time-sharing, cooperating PROCESSES  4 
CACM-2378

N-Dimensional Codes for Detecting and Correcting MULTIPLE Errors The paper introduces a new family of codes for detecting and correcting MULTIPLE errors in  a binary-coded messageThe MESSAGE itself is arranged (conceptually) into a multidimensional rectangular  array 
CACM-0243

Considerations in the Design of a MultipleComputer System with Extended Core Storagemultiple computer systems, extended core storage, multiprogrammed OPERATING systems, multiprocessor  OPERATING systems, control data corporation 6600, OPERATING system with ECS  4 The use of large quantities of addressable (but not executable) fast random access memory to  heighten the multiprogramming performance of a multicomputer system is discussed 
CACM-1750

The Design, Implementation, and Evaluation of a Working Set DispatcherRecent research in time-sharing paging SYSTEMS  has developed the working set model for program behavior, and are source allocation strategy BASED on  this model has been proposedThis report discusses the design and  implementation of a dispatcher BASED on the working set principle, presents data to permit analysis of  its behavior, and indicates future directions of research on methods of controlling a computer system 
CACM-2522

A General Business-Oriented Language BASED on Decision Expressions*Such a structure, BASED on identifying and incorporating  into a compiler the aspects common to all PROCESSES of such class, permits writing extremely compact  programs, even for comparatively complex applications, in terms of tables of control expressions which  express only information characteristic of the particular applicationIt stresses  the structural analysis of the class of PROCESSES to be represented in the languages, as opposed to emphasizing  formal (i 
CACM-1135

On the Meaning of Names in Programming SystemsWhereas a function can be  regarded as the abstraction BASED upon the first two terms of the expression Lambda(name list)(expression)(value list),  it is found that a context can be viewed as an abstraction BASED upon the first two terms in the equivalent  expression Mu(name list)(value list)(expression) It is assumed that there is a similarity of function between the data names of a programming  language and the file names of an OPERATING system 
CACM-2184

The Nucleus of a Multiprogramming System This paper describes the philosophy and structure of a multiprogramming system  that can be extended with a hierarchy of OPERATING SYSTEMS to suit diverse  requirements of program scheduling and resource allocationA fundamental set of primitives allows the dynamic creation and control of a hierarchy of PROCESSES as well as the communication among them 
CACM-2080

The UNIX Time-Sharing system  UNIX is a general-purpose, multi-user, interactive OPERATING system for the Digital Equipment  Corporation PDP-11/40 and 11/45 computersIt offers a number of features seldom found even in larger  OPERATING systems, including: (1) a hierarchical file system incorporating demountable volumes; (2) compatible  file, device, and inter-process I/O; (3) the ability to initiate asynchronous processes; (4) system command  language selectable on a per-user basis; and (5) over 100 subsystems including a dozen languageshis  paper discusses the nature and implementation of the file system and of the user command interface 
CACM-2629

Structured MultiprogrammingThese  concepts are sufficiently safe to use not only within OPERATING SYSTEMS but also within user programsThe notation used explicitly associates a data structure shared by concurrent PROCESSES  with operations defined on it 
CACM-2320

QUERY:
Optimization of intermediate and machine code 

SNIPPETS:

Optimal CODE for Serial and Parallel Computationcode optimization, sequencing of operations, detection of common subexpressions  4 CACM December, 1969  Fateman, R 
CACM-1795

A Case Study of a New CODE Generation Technique for Compilerscompiler structure, optimizing compiler, CODE generation, PL/I compiler, concatenation, program  optimization, OPTIMIZATION techniques, data flow analysis  4 Recent developments in optimizing techniques have allowed a new design for compilers to emerge 
CACM-2897

Analysis of Algorithms for the Zero-One Programming ProblemThe MACHINE time and storage  requirements of several of the algorithms are compared over several test problems of small and INTERMEDIATE  sizeComputer experiments still provide little hope of solving problems with over 100 variables with  a reasonable amount of MACHINE time 
CACM-1658

Index Ranges for Matrix CalculiThis scheme attempts program OPTIMIZATION by transforming the original algorithm  rather than the MACHINE codeThe goal is to automatically generate CODE for handling the tedious address  calculations necessitated by complicated data structures 
CACM-2253

Proving the Correctness of Heuristically Optimized CODE A primary use of the system is as a post OPTIMIZATION step in CODE  generationThe examples demonstrate  that OPTIMIZATION of the genre of this paper can result in substantially faster operation and the saving  of memory in terms of program and stack sizes 
CACM-3080

Object CODE OPTIMIZATION Methods of analyzing the control flow and data flow of programs during compilation are applied  to transforming the program to improve object time efficiencyDominance relationships, indicating which  statements are necessarily executed before others, are used to do global common expression elimination  and loop identification 
CACM-1947

Adapting Optimal CODE Generation for ArithmeticExpressions to the Instruction Sets Available on Present-Day Computersarithmetic expressions, CODE generation, compilers, object-code optimization, register assignment,  trees  4 CACM June, 1973  Stockhausen, P 
CACM-2495

Threaded CODE The concept of "threaded code" is presented as an alternative to MACHINE language codeinterpreter, MACHINE code, time tradeoff, space tradeoff, compiled code, subroutine calls, threaded  CODE  4 
CACM-2491

An Algorithm for Reduction of Operator StrengthThese algorithms should fit well into an integrated package of local OPTIMIZATION algorithmscompilers, OPTIMIZATION of compiled code, program analysis, operator strength reduction, test replacement,  strongly connected region  4 
CACM-2904

Indirect Threaded CODE An efficient arrangement for interpretive CODE is describedIt is related to Bell's notion  of threaded CODE but requires less space and is more amenable to MACHINE independent implementations 
CACM-2748

QUERY:
I am interested in articles written either by Prieve or Udo Pooch Prieve, B. Pooch, U. 

SNIPPETS:

Analysis of the Availability of ComputerSystems Using Computer- Aided Algebra Analytical results, related to the availability of a computer system constructed of unreliable  processors, are presented in this paperThese results are obtained by using various computer-aided  algebraic manipulation techniques 
CACM-3078

Using Page Residency To Select the Working Set Parameter Denning's method for selecting the working set parameter, which uses interreference intervals,  is examinedSeveral omissions in his model are noted, and new assumptions are introduced to overcome  these omissions 
CACM-2434

VMIN-An Optimal Variable-Space Page Replacement Algorithm A criterion for comparing variable space page replacement algorithms is presentedAn optimum  page replacement algorithm, called VMIN, is described and shown to be optimum with respect to this criterion 
CACM-2863

Optimal Storage Allocation for Serial Files A computer system uses several serial filesThe files reside on a  direct-access storage device in which storage space is limited 
CACM-3129

Mathematical Experimentation in Time-Lag Modulation Equations of the form du/dt = g(u(t),u(h(t))) arise in a number of scientific contextsThe  authors point out some interesting properties of the solution u'(t) = -u(t-1-k*sin(wt))+sin(at) 
CACM-1364

An Interactive Display for Approximation by Linear Programming An interactive program with a graphical display has been developed for the approximation of data by means of a linear combination of functions (including splines) selected by the userThe coefficients of the approximation are determined by linear programming so as to minimize the error in either the L1 or L-infinity norm 
CACM-1977

An Information Algebra - Phase I Report-LanguageStructure Group of the CODASYL Development Committee This report represents the results of the first phase of the work of the Language Structure  GroupThe goal of this work is to arrive at a proper structure for a machine-independent problem-defining  language, at the systems level of data processing 
CACM-0616

Price/Performance Patterns of U. Computer Systems Econometric models of the Ucomputer market have been developed to study  the relationships between system price and hardware performance 
CACM-3136

Computer Methods for Sampling from the Exponentialand Normal Distributions (Corrigendum) CACM December, 1972  Ahrens, JH 
CACM-2250

A Multiuser Computation Facility for Education and Research Present-day computing facilities are limited in their value for scientific research by inability  to interact strongly with usersThe full power of a research computing instrument should be available  at many terminals that give each user the ability to generate, correct and operate any procedure he wishes,  either simple or complex 
CACM-1010

QUERY:
Languages and compilers for parallel processors, especially highly horizontal microcoded machines; code compaction 

SNIPPETS:

Merging with PARALLEL PROCESSORS Consider two linearly ordered sets A, B, |A|=m, |B|=n, m<=n, and p, p<=m, PARALLEL PROCESSORS  working synchronouslyThe paper presents an algorithm for merging A and B with the p PARALLEL processors,  which requires at most 2[log2 (2m+1)]+[3m/p] + [m/p][log2 (n/m)] steps 
CACM-2714

Fast PARALLEL Sorting Algorithms A PARALLEL bucket-sort algorithm is presented that requires time O(log n) and the use of n  processorsThe algorithm makes use of a technique that requires more space than the product of PROCESSORS  and time 
CACM-3075

The PARALLEL Execution of DO Loops Methods are developed for the PARALLEL execution of different iterations of a DO loopparallel computing, multiprocessor computers, array computers, vector computers, loops  4 
CACM-2685

Optimal CODE for Serial and PARALLEL Computationcode optimization, sequencing of operations, detection of common subexpressions  4 CACM December, 1969  Fateman, R 
CACM-1795

A Comparison of List Schedules for PARALLEL Processing Systemsparallel processing, precedence graphs, scheduling, list scheduling, optimization, dynamic programming  4 The problem of scheduling two or more PROCESSORS to minimize the execution time of a program  which consists of a set of partially ordered tasks is studied 
CACM-2570

Computing Connected Components on PARALLEL Computers We present a PARALLEL algorithm which uses n2 PROCESSORS to find the connected components of an undirected graph with n vertices in time O(log2n)An O(log2n) time bound also can be achieved using only n$n/$log2n)) PROCESSORS 
CACM-3156

Program Structures for PARALLEL Processing Constructs for organizing and explicating PARALLEL program segments are discussed as extensions  to ALGOL 60The constructs serve as meta-commands and are motivated by equipment having multiprocessing  capability 
CACM-1158

Models for PARALLEL Processing WIthin Programs:Application to CPU:I/O and I/O:I/O Overlap Approximate queueing models for internal PARALLEL processing by individual programs in a multiprogrammed  system are developed in this paperMultiprogramming, PARALLEL processing, queueing network models, multiprocessing of computation  and I/O   4 
CACM-3059

A HIGHLY PARALLEL Algorithm for ApproximatingAll Zeros of a Polynomial with Only Real ZerosThe algorithm, which is conceptually suitable for PARALLEL computation,  determines its own starting values so that convergence to the zeros is guaranteedparallel numerical algorithms, real polynomials, real zeros, Newton's method, starting values,  guaranteed convergence  5 
CACM-2266

A Case Study in Programming for Parallel-Processors An affirmative partial answer is provided to the question of whether it is possible to program  parallel-processor computing systems to efficiently decrease execution time for useful problemsParallel-processor  systems are multiprocessor systems in which several of the PROCESSORS can simultaneously execute separate  tasks of a single job, thus cooperating to decrease the solution time of a computational problem 
CACM-1811

QUERY:
Parallel algorithms 

SNIPPETS:

Sorting on a Mesh-Connected PARALLEL Computer Two ALGORITHMS are presented for sorting n^2 elements on an n X n mesh-connected processor  array that require O(n) routing and comparison stepsThe ALGORITHMS of this paper are shown to be optimal in time within small constant factors 
CACM-2973

A Highly PARALLEL Algorithm for ApproximatingAll Zeros of a Polynomial with Only Real ZerosThe algorithm, which is conceptually suitable for PARALLEL computation,  determines its own starting values so that convergence to the zeros is guaranteedparallel numerical algorithms, real polynomials, real zeros, Newton's method, starting values,  guaranteed convergence  5 
CACM-2266

Fast PARALLEL Sorting ALGORITHMS A PARALLEL bucket-sort algorithm is presented that requires time O(log n) and the use of n  processorsThe algorithm makes use of a technique that requires more space than the product of processors  and time 
CACM-3075

PARALLEL Methods for Integrating Ordinary Differential Equations This paper is dedicated to the proposition that, in order to take full advantage for real-time  computations of highly PARALLEL computers as can be expected to be available in the near future, much  of numerical analysis will have to be recast in a more "parallel" formBy this is meant that serial  ALGORITHMS ought to be replaced by algorithm which consist of several subtasks which can be computed  without knowledge of the results of the other subtasks 
CACM-0950

Computing Connected Components on PARALLEL Computers We present a PARALLEL algorithm which uses n2 processors to find the connected components of an undirected graph with n vertices in time O(log2n)Graph theory, PARALLEL processing, algorithms, transitive closure, connected component  5 
CACM-3156

On the Time Required for a Sequence of Matrix ProductsThe minimum time required to evaluate such products on ordinary serial computers  as well as PARALLEL computers is discussedmatrix expressions, matrix multiplication, operation minimization, PARALLEL machine, time minimization  4 
CACM-2557

A Comparison of List Schedules for PARALLEL Processing Systemsparallel processing, precedence graphs, scheduling, list scheduling, optimization, dynamic programming  4 The problem of scheduling two or more processors to minimize the execution time of a program  which consists of a set of partially ordered tasks is studied 
CACM-2570

Merging with PARALLEL Processors Consider two linearly ordered sets A, B, |A|=m, |B|=n, m<=n, and p, p<=m, PARALLEL processors  working synchronouslyThe paper presents an algorithm for merging A and B with the p PARALLEL processors,  which requires at most 2[log2 (2m+1)]+[3m/p] + [m/p][log2 (n/m)] steps 
CACM-2714

Procedure-Oriented Language Statements to Facilitate PARALLEL Processing Two statements are suggested which allow a programmer writing in a procedure-oriented language  to indicate sections of program which are to be executed in parallelThe statements are DO TOGETHER  and HOLD 
CACM-1262

Cellular Arrays for the Solution of Graph ProblemsThe chief computational advantage  offered by cellular arrays is the improvement in speed achieved by virtue of the possibilities for PARALLEL  processinggraph theory, cellular logic-in-memory arrays, PARALLEL processing, special purpose computers,  ALGORITHMS for distance and spanning tree problems  5 
CACM-2289

QUERY:
Graph theoretic algorithms applicable to sparse matrices 

SNIPPETS:

Tridiagonalization by PermutationsConsider the class of SPARSE MATRICES which can be tridiagonalized using  only row and corresponding column permutationsA GRAPH THEORETIC algorithm which examines an arbitrary n x n matrix and determines whether or not it  can be permuted into tridiagonal form is given 
CACM-2695

A Modification of Warshall's Algorithm forthe Transitive Closure of Binary Relations An algorithm is given for computing the transitive closure of a binary relation that is represented  by a Boolean matrixThe algorithm is similar to Warshall's although it executes faster for SPARSE MATRICES on most computers, particularly in a paging environment 
CACM-2769

Operations on SPARSE RelationsThe heart of the ALGORITHMS is a general theorem giving sufficient conditions under which  an expression whose operands are SPARSE relations and whose operators are composition, transitive closure,  union, and inverse, can be computed efficientlycomputational complexity, SPARSE relation, Boolean matrix, directed graph, Wirth-Weber precedence  relation, linear precedence function, SLR grammar, T-canonical precedence relation  4 
CACM-2986

Efficient ALGORITHMS for GRAPH Manipulation [H] (Algorithm A447) Efficient ALGORITHMS are presented for partitioning a GRAPH into connected components, biconnected  components and simple pathsThe algorithm for partitioning of a GRAPH into simple paths is iterative  and each iteration produces a new path between two vertices already on paths 
CACM-2490

An Implemented GRAPH Algorithm for Winning Shannon Switching gamesSince these games are played on graphs, the program is a good example of the implementation of GRAPH  ALGORITHMS In this tutorial paper a computer program which wins Shannon Switching Games is described 
CACM-2368

On Computing Certain Elements of the Inverse of a SPARSE Matrixsparse matrices, triangular factorization, elements of inverse, tridiagonal matrix, sensitivities  3 A recursive algorithm for computing the inverse of a matrix from the LU factors based on relationships  in Takahashi, et al 
CACM-2780

On Computing Sets of Shortest Paths in a GRAPH Two ALGORITHMS are presented that construct the k shortest paths between every pair of vertices  in a directed graphThese ALGORITHMS generalize the Floyd algorithm and the Dantzig algorithm for finding  the shortest path between every pair of vertices in a directed GRAPH 
CACM-2630

Cellular Arrays for the Solution of GRAPH Problems A cellular array is a two-dimensional, checkerboard type interconnection of identical modules  (or cells), where each cell contains a few bits of memory and a small amount of combinational logic,  and communicates mainly with its immediate neighbors in the arrayThe chief computational advantage  offered by cellular arrays is the improvement in speed achieved by virtue of the possibilities for parallel  processing 
CACM-2289

A Note on Information Organization and StorageThe use of  different relations and ALGORITHMS results in different information structures, as list, tree, ring,  etcThus the problem of information organization and storage is reduced to that of defining relations  and formulating ALGORITHMS under a given set of constraints 
CACM-2484

New Methods to Color the Vertices of a GRAPH This paper describes efficient new heuristic methods to color the vertices of a GRAPH which rely upon the comparison of the degrees and structure of a graphA method is developed which is exact for bipartite graphs and is an important part of heuristic procedures to find maximal cliques in general graphs 
CACM-3139

QUERY:
computational complexity, intractability, class-complete reductions, algorithms and efficiency 

SNIPPETS:

A Sorting Problem and Its Complexitysorting, COMPUTATIONAL complexity, COMPUTATIONAL combinatorics  5 A technique for proving min-max norms of sorting ALGORITHMS is given 
CACM-2337

Convex Hulls of Finite Sets of Poin ts in Two and Three DimensionsSince any convex hull algorithm requires at  least O(n log n) operations, the time COMPLEXITY of the proposed ALGORITHMS is optimal within a multiplicative  constantThe presented ALGORITHMS use the "divide and conquer" technique and recursively apply  a merge procedure for two nonin tersecting convex hulls 
CACM-2997

On the COMPLEXITY of Computing the Measure of U[ai, bi]Analysis of algorithms, combinatorial problems, COMPUTATIONAL complexity, COMPUTATIONAL models,  decision tree programs, lower bounds  5 The decision tree COMPLEXITY of computing the measure of the union of n (possibly overlapping)  intervals is shown to be  (n log n), even if comparisons between linear functions of the interval endpoints  are allowed 
CACM-3086

COMPLEXITY of Computations The framework for research in the theory of COMPLEXITY of computations is described, emphasizing  the in terrelation between seemingly diverse problems and methodsIllustrative examples of practical  and theoretical significance are given 
CACM-2932

New Upper Bounds for Selection The worst-case minimum number of comparisons COMPLEXITY Vi(n) of the i-th selection problem  is consideredA new upper bound for Vi(n) improves the bound given by the standard Hadian-Sobel algorithm  by a generalization of the Kirkpatrick-Hadian-Sobel algorithm, and extends Kirkpatrick's method to a  much wider range of application 
CACM-2837

Some New Upper Bounds on the Generation of Prime Numbers Given an integer N, what is the COMPUTATIONAL COMPLEXITY of finding all the primes less than  Ncomputational complexity, sieve, prime number generation, number theory, linked list, preprocessing,  balancing  5 
CACM-2927

Covering Edges by Cliques with Regard toKeyword Conflicts and Intersection GraphsA relationship  between this edge-clique-cover problem and the graph coloring problem is established which allows ALGORITHMS  for either one of these problems to be constructed from algorithm for the otherAs consequences of  this relationship, the keyword conflict problem and the edge-clique-cover problem are shown to be NP-complete,  and if P=/NP then they do not admit polynomial-time approximation ALGORITHMS which always produce solutions  within a factor less than 2 from the optimum 
CACM-3018

Numerical Mathematics and Computer Science Numerical mathematics is viewed as the analysis of continuous algorithmsFour of the components  of numerical mathematics are discussed 
CACM-2325

A Computer User-Oriented System A computer language system has been developed which makes possible fast preparation of management  reports, regardless of COMPUTATIONAL COMPLEXITY or format varietyUse of two special languages, EXTRACT and MATRAN,  permits selective extraction of any data subset, efficient processing through any COMPUTATIONAL sequence,  and flexible presentation of results in either tabular or graphical form 
CACM-1309

FOCUS Microcomputer Number System FOCUS is a number system and supporting COMPUTATIONAL ALGORITHMS especially useful for microcomputer control and other signal processing applicationsNumber representation, logarithmic arithmetic, COMPUTATIONAL speed, COMPUTATIONAL accuracy, microcomputer applications    3 
CACM-3131

QUERY:
I am interested in hidden-line and hidden-surface algorithms for cylinders, toroids, spheres, and cones. This is a rather specialized topic in computer graphics. 

SNIPPETS:

HIDDEN-LINE Plotting Program (Algorithm R420)hidden-line plot, surface plot  4 CACM July, 1973  Macleod, I 
CACM-2473

HIDDEN-LINE Plotting Program [J6] (Algorithm A420)hidden-line plot, surface plot   4 CACM February, 1972  Williamson, H 
CACM-2384

HIDDEN-LINE Plotting Program (Algorithm R420) CACM June, 1974  Gaither, B 
CACM-2638

HIDDEN-LINE Plotting Program (Algorithm R420) CACM September, 1973  Williamson, H 
CACM-2441

HIDDEN-LINE Plotting Program (Algorithm R420) CACM December, 1974  Ellis, TM 
CACM-2564

HIDDEN-LINE Plotting Program (Algorithm R420) CACM June, 1974  Ellis, TM 
CACM-2637

The Aliasing Problem in Computer-Generated Shaded ImagesA method for evaluating filters is presented, the application of prefiltering  to HIDDEN-SURFACE ALGORITHMS is discussed, and an implementation of a filtering tiler is shown accompanied  by examples of its effectivenessaliasing, COMPUTER graphics, convolutional filtering, HIDDEN-SURFACE removal, sampling  8 
CACM-2913

Reentrant Polygon ClippingThis method is ideal  for subsequent HIDDEN-SURFACE computations A new family of clipping ALGORITHMS is described 
CACM-2692

Visible Surface Plotting Program [J6] (Algorithm A475) CACM March, 1974  Wright, Thidden line problem, COMPUTER graphics, contour surface  3 
CACM-2678

Scan Conversion ALGORITHMS for a Cell Organized Raster Display Raster scan COMPUTER GRAPHICS with "real time" character generators have previously been limited  to alphanumeric charactersA display has been described which extends the capabilities of this organization  to include general GRAPHICS 
CACM-2674

QUERY:
Distributed computing structures and algorithms 

SNIPPETS:

High Level Programming for DISTRIBUTED ComputingThis paper describes an approach to DISTRIBUTED COMPUTING at the level of general purpose programming languages Programming for DISTRIBUTED and other loosely coupled systems is a problem of growing interest 
CACM-3148

A Methodology for the Design of DISTRIBUTED Information Systems A macro model of a DISTRIBUTED information system in presentedThe model describes the major costs of using an information system from the perspective of the end-user 
CACM-3137

Ethernet: DISTRIBUTED Packet Switching for Local Computer Networks Ethernet is a branching broadcast communication system for carrying digital data packets among  locally DISTRIBUTED COMPUTING stationsThe packet transport mechanism provided by Ethernet has been  used to build systems which can be viewed as either local computer networks or loosely coupled multiprocessors 
CACM-2849

A Position Paper on COMPUTING and Communications The effective operation of free enterprise in creating the envisioned information service industry  is dependent upon three accomplishments: (1) the restructuring of our information processing industry  so that a clear division of costs is made among computing, communications, and the development of information  services; (2) the wide use of multiaccess system concepts so that information services may share in the  use of computer installations and so that the cost of their construction is reasonable; and (3) the development  of public, message-switched communications services so that adequate provisions are made for information  securityCACM May, 1968  Dennis, J 
CACM-1745

A Correctness Proof of a Topology InformationMain tenance Protocol for a DISTRIBUTED Computer Network In order for the nodes of a DISTRIBUTED computer network to communicate, each node must have  information about the network's topologySince nodes and links sometimes crash, a scheme is needed  to update this information 
CACM-2949

DISTRIBUTED Processes: A Concurrent Programming Concept A language concept for concurrent processes without common variables is introducedThese  processes communicate and synchronize by means of procedure calls and guarded regions 
CACM-3043

Time, Clocks, and the Ordering of Events in a DISTRIBUTED System The concept of one event happening before another in a DISTRIBUTED system is examined, and is shown to define a partial ordering of the eventsA DISTRIBUTED algorithm is given for synchronizing  a system of logical clocks which can be used to totally order the events 
CACM-3082

Self-stabilizing Systems in Spite of DISTRIBUTED Controlmultiprocessing, networks, self-stabilization, synchronization, mutual exclusion, robustness, sharing,  error recovery, DISTRIBUTED control, harmonious cooperation, self-repair  4 CACM November, 1974  Dijkstra, E 
CACM-2578

Computer Methods for Sampling fromthe Exponential and Normal Distributions Various methods are known for transforming uniformly DISTRIBUTED random numbers into exponentially and normally DISTRIBUTED quantitiesThe most efficient ones are compared, in terms of memory requirements  and speed, with some new ALGORITHMS 
CACM-2276

An Efficient Method for Generating Uniformly DistributedPoints on the Surface on an n-Dimensional Sphere (Corrigendum) CACM October, 1959  Cook, JM 
CACM-0052

QUERY:
Applied stochastic processes 

SNIPPETS:

An Algorithm for Identifying the Ergodic Subchainsand Transient States of a STOCHASTIC Matrix An algorithm for identifying the ergodic subchains and transient states of a STOCHASTIC matrix is presentedApplications in Markov renewal programming and in the construction of variable length  codes are reviewed, and an updating procedure for dealing with certain sequences of STOCHASTIC matrices  is discussed 
CACM-1696

STOCHASTIC Evaluation of a Static Storage Allocation CACM October, 1961  Cohen, LJ 
CACM-0268

Interarrival Statistics for Time Sharing Systems The optimization of time-shared system performance requires the description of the STOCHASTIC  PROCESSES governing the user inputs and the program activityThis paper provides a statistical description  of the user input process in the SDC-ARPA general-purpose Time-Sharing System (TSS) 
CACM-1410

A STOCHASTIC Evaluation Model for DatabaseOrganization in Data Retrieval Systemsdatabase architecture, database performance and evaluation, invented list, threaded list, cellular  list, information retrieval, database organizations, query complexity, STOCHASTIC model, Monte Carlo  simulation  3 Experimental work in the valuation of large scale data retrieval systems has been scarce due  to its difficulty and prohibitive cost 
CACM-2882

An Algorithm for Class Scheduling With Section Preference An algorithm for assignment of students to classes in a fixed time schedule that allows students  to give a preference for sections within courses is givenIf consistent with the objective of balanced  sections, these preferences will be honored 
CACM-1540

Design of Computer Simulation Experiments for Industrial Systems The aim of this paper is to provide background information on the existing literature on experimental  design techniques which may be applicable to the design of computer simulation experiments for industrial  systemsAlthough major emphasis is placed on analysis of variance techniques, three other techniques  of data analysis are considered-multiple ranking procedures, sequential sampling and spectral analysis 
CACM-1435

Establishment of the ACM Repository and Principlesof the IR System APPLIED to its Operation The history of the establishment of the ACM Repository at the Moore School, University of Pennsylvania,  is reviewed brieflyTwo principles are presented as paramount in the provision of information services:  (1) easy accessibility to the information files by users unfamiliar with file organization, and (2) value  of service exceeding user costs 
CACM-1194

Improved Event-Scanning Mechanisms for Discrete Event Simulation Simulation models of large, complex "real-world" applications have occasionally earned the  reputation of eating up hours of computer timeThis problem may be attributed in part to difficulties  such as slow STOCHASTIC convergence 
CACM-2742

A STOCHASTIC Approach to the Grammatical Coding of English A computer program is described which will assign each word in an English text to its form  class or part of speechThe program operates at relatively high speed in only a limited storage space 
CACM-1235

The Effects of Multiplexing on a Computer-Communications System A study is made of the way in which asynchronous time division multiplexing changes the STOCHASTIC  nature of the arrival process from a user to the computer and, consequently, affects the performance  of a time-shared computer-communications systemIt is concluded that while, for certain values of system  parameters, there is noticeable improvement in the performance of the computer (model), in the sense  that time-shared scheduling delays are reduced, these improvements are offset by the transmission delays  imposed by multiplexing so that there may be little or no change in the computer-communications system  performance 
CACM-2535

QUERY:
Performance evaluation and modelling of computer systems 

SNIPPETS:

The Role of COMPUTER System Models in PERFORMANCE EVALUATION Models constitute a useful means of investigating COMPUTER system performanceThis paper  examines the interrelationships between models and other methods for evaluating the PERFORMANCE of COMPUTER  SYSTEMS and establishes circumstances under which the use of a model is appropriate 
CACM-2318

Computer-Aided Analysis and Design of Information SystemsComputer-aided  analysis consists of a set of procedures and COMPUTER programs specifically designed to aid in the process  of applications software design, COMPUTER selection and PERFORMANCE EVALUATION This paper describes the use of computer-aided analysis for the design and development of an  integrated financial management system by the Navy Material Command Support Activity (NMCSA) 
CACM-2812

A Software Design and EVALUATION SystemA system which integrates PERFORMANCE EVALUATION with design and implementation is described A critical failure of current software system design and implementation methodology is that  the PERFORMANCE of a proposed design is not evaluated before it is actually implemented 
CACM-2542

PERFORMANCE of Rollback Recovery SYSTEMS under Intermittent FailuresThe model is used to derive the principal PERFORMANCE measures, including availability,  response time, and the system saturation pointDatabase reliability, file systems, checkpoints, recovery procedures, checking techniques, reliability  and system PERFORMANCE EVALUATION  3 
CACM-3089

System PERFORMANCE Evaluation: Survey and Appraisal The state of the art of system PERFORMANCE EVALUATION is reviewed and EVALUATION goals and  problems are examinedThroughput, turnaround, and availability are defined as fundamental measures  of performance; overhead and CPU speed are placed in perspective 
CACM-1653

The Impact of Distributions and Disciplineson Multiple Processor SYSTEMS Simple queueing models are used to study the PERFORMANCE tradeoffs of  multiple processor systemsMultiprogramming, multiprocessing, scheduling disciplines, PERFORMANCE evaluation, queueing models  4 
CACM-3119

A Comparative Study of COMPUTER Programsfor Integrating Differential Equations A study comparing the PERFORMANCE of several COMPUTER programs for integrating SYSTEMS of ordinary  differential equations is reportedFor the particular problems and criteria used in  the investigation it was found that a program based on rational extrapolation showed the best PERFORMANCE 
CACM-2268

Cost/Utilization: A Measure of System PERFORMANCE A method is presented for evaluating COMPUTER system PERFORMANCE in terms of a cost/utilization  factor and a measure of imbalancecomputer system, PERFORMANCE evaluation, cost/utilization, system balance  2 
CACM-2984

An EVALUATION of Statistical Software in the Social Sciences  Several hundred college and university COMPUTER installations now offer various types of statistical  packages for general useAmong those most widely available are OSIRIS, SPSS, BMD, DATA-TEXT, and TSAR 
CACM-2634

Time-Sharing and Batch-Processing:  An ExperimentalComparison of Their Values in a Problem - Solving Situation An experimental comparison of problem-solving using time-sharing and batch-processing COMPUTER  SYSTEMS conducted at MIT is described in this paperThis study is the first known attempt to evaluate  two such SYSTEMS for what may well be the predominant user population within the next decade-the professionals  who, as nonprogrammers, are using the COMPUTER as an aid in decision-making and problem-solving rather  than as a programming end in itself 
CACM-1908

QUERY:
Concurrency control mechanisms in operating systems 

SNIPPETS:

Considerations in the Design of a MultipleComputer System with Extended Core Storagemultiple computer systems, extended core storage, multiprogrammed OPERATING systems, multiprocessor  OPERATING systems, CONTROL data corporation 6600, OPERATING system with ECS  4 The use of large quantities of addressable (but not executable) fast random access memory to  heighten the multiprogramming performance of a multicomputer system is discussed 
CACM-1750

Protection and the CONTROL of Information Sharing in Multics The design of MECHANISMS to CONTROL the sharing of information in the Multics system is describedThe  key MECHANISMS described include access CONTROL lists, hierarchical CONTROL of access specifications,  identification and authentication of users, and primary memory protection 
CACM-2626

On the Implementation of Security Measures in Information SystemsThe model is used to explain  security features of several existing systems, and serves as a framework for a proposal for general security  system implementation within today's languages and OPERATING systemssecurity, privacy, access CONTROL confidentiality, OPERATING systems, access management, data banks,  management information SYSTEMS  3 
CACM-2372

A General-Purpose Display Processing and Tutorial System ADEPT (A display-Expedited Processing and Tutorial) system is describedThis system was designed  to improve man-computer communications by employing a display unit to interleave tutoring with other  computer operations such as simulation, programming, and information retrieval 
CACM-1680

A Model for Verification of Data Security in OPERATING SYSTEMS Program verification applied to kernel architectures forms a promising method for providing  uncircumventably secure, shared computer systemsA precise definition of data security is developed  here in terms of a general model for OPERATING SYSTEMS 
CACM-3068

Storage Organization in Programming SystemsThe application of labeled blocks may be  extended to areas of time-sharing and multimedia storage CONTROL The system of program and data representation that has been in use on the Rice University computer  for five years is described 
CACM-1677

Protection in OPERATING SYSTEMS A model of protection MECHANISMS in computing SYSTEMS is presented and its appropriateness  is arguedThe "safety" problem for protection SYSTEMS under this model is to determine in a given situation  whether a subject can acquire a particular right to an object 
CACM-2840

The Evolution of the Sperry Univac 1100Series: A His tory, Analysis, and Projection The 1100 series SYSTEMS are Sperry Univac's large-scale main frame computer systemsBeginning  with the 1107 in 1962, the 1100 series has progressed through a succession of eight compatible computer  models to the latest system, the 1100/80, introduced in 1977 
CACM-3026

A Model for a Multifunctional Teaching SystemThe model transferred CONTROL to the OPERATING system to execute functions other than  teaching, and then recovered CONTROL in order to resume teaching A teaching system model that was incorporated into an OPERATING system of a large computer  is described 
CACM-1591

A Language Extension for Expressing Constraints on Data Access Controlled sharing of information is needed and desirable for many applications and is supported  in OPERATING SYSTEMS by access CONTROL mechanismsThis paper shows how to extend programming languages  to provide controlled sharing 
CACM-3105

QUERY:
Memory management aspects of operating systems 

SNIPPETS:

A Model of MEMORY Contention in a Paging Machine This paper is concerned with certain ASPECTS of contention for main MEMORY resources in a multiprogrammed  computer system OPERATING under demand pagingpaging machines, demand paging, OPERATING SYSTEMS studies, queuing analysis, MEMORY contention,  MEMORY MANAGEMENT  4 
CACM-2297

MEMORY MANAGEMENT and Response Time This paper presents a computationally tractable methodology for including accurately the effects  of finite MEMORY size and workload MEMORY requirements in queueing network models of computer systemsA multiphase, analytically soluble model is proposed as being broadly applicable to the analysis  of in teractive computer SYSTEMS which use nonpaged memories 
CACM-2988

Resource MANAGEMENT for a Medium Scale Time-Sharing OPERATING systemtime-sharing, OPERATING systems, resource management, task scheduling, paging, system simulation,  MEMORY management, virtual memories  4 Task scheduling and resource balancing for a medium size virtual MEMORY paging machine are  discussed in relation to a combined batch processing and time-sharing environment 
CACM-1752

Analysis of Interleaved MEMORY SYSTEMS Using Blockage Buffers A model of interleaved MEMORY SYSTEMS is presented, and the analysis of the model by Monte  Carlo simulation is discussedThe simulations investigate the performance of various system structures,  i 
CACM-2798

The Multics Virtual Memory: Concepts and Design As experience with use of on-line OPERATING SYSTEMS has grown, the need to share information  among system users has become increasingly apparentMany contemporary SYSTEMS permit some degree of  sharing 
CACM-2358

Considerations in the Design of a MultipleComputer System with Extended Core Storagemultiple computer systems, extended core storage, multiprogrammed OPERATING systems, multiprocessor  OPERATING systems, control data corporation 6600, OPERATING system with ECS  4 The use of large quantities of addressable (but not executable) fast random access MEMORY to  heighten the multiprogramming performance of a multicomputer system is discussed 
CACM-1750

Comments on a Paper by Wallace and Mason CACM April, 1970  Heess Jr, W 
CACM-2069

Interference in Multiprocessor Computer SYSTEMS with Interleaved MemoryThe model  of the limiting behavior of the system yields approximate results for the simple model and also suggests  that the results are valid for a much larger class of models, including those more nearly like real SYSTEMS  that the simple model are tested against some measurements of program behavior and simulations of SYSTEMS  using MEMORY references from real programs This paper analyzes the MEMORY interference caused by several processors simultaneously using  several MEMORY modules 
CACM-2859

A Simple Linear Model of Demand Paging Performance Predicting the performance of a proposed automatically managed multilevel MEMORY system requires  a model of the patterns by which programs refer to the information stored in the memorySome recent  experimental measurements on the Multics virtual MEMORY suggest that, for rough approximations, a remarkably  simple program reference model will suffice 
CACM-2669

Dynamic MEMORY Allocation in Computer Simulation This paper investigates the performance of 35 dynamic MEMORY allocation algorithms when used  to service simulation programs as represented by 18 test casesAlgorithm performance was measured in terms of processing time, MEMORY usage, and external MEMORY fragmentation 
CACM-2902

QUERY:
Any information on packet radio networks. Of particular interest are algorithms for packet routing, and for dealing with changes in network topography. I am not interested in the hardware used in the network. 

SNIPPETS:

Reverse Path Forwarding of Broadcast Packets A broadcast PACKET is for delivery to all nodes of a networkAlgorithms for accomplishing  this delivery through a store-and-forward PACKET switching  computer NETWORK include (1) transmission  of separately addressed packets 
CACM-3032

A Correctness Proof of a Topology InformationMain tenance Protocol for a Distributed Computer Networkdistributed computer network, correctness proofs, computer networks, distributed control, NETWORK  topology, ROUTING problem in networks, distributed operating system, store and forward PACKET switching,  store and forward message switching, traffic control  3 In order for the nodes of a distributed computer NETWORK to communicate, each node must have  INFORMATION about the network's topology 
CACM-2949

A Study of Line Overhead in the ArpanetSome measurements of line efficiency for the ARPANET are presented and by extrapolation these measurements  are used to anticipate overhead in a heavily loaded networkSimilar results are derived for a recently  proposed NETWORK protocol and compared with those for the current system 
CACM-2892

On Quadratic Adaptive ROUTING ALGORITHMS Two analytic models of a store-and-forward communications NETWORK are constructed, one to find  the optimal message ROUTING and the other to illustrate the equilibrium (stationary state) maintained  by an adaptive ROUTING algorithmThese models show that adaptive ROUTING does not satisfy the necessary  conditions for an optimal routing,  Adaptive ROUTING tends to overuse the direct path and underuse alternate  routes because it does not consider the impact of its current ROUTING decision on the future state of  the NETWORK 
CACM-2890

Ethernet: Distributed PACKET Switching for Local Computer NetworksThe PACKET transport mechanism provided by Ethernet has been  used to build systems which can be viewed as either local computer NETWORKS or loosely coupled multiprocessors Ethernet is a branching broadcast communication system for carrying digital data packets among  locally distributed computing stations 
CACM-2849

Computer NETWORKS in Higher Education: Socio-Economic-Political Factors, and the Triangle Universities Computation  Center NETWORK in North Carolina This study presents the results of a nationwide survey of computer NETWORKS in higher education  conducted during 1971-73 
CACM-2776

GAN, a System for Generating and Analyzing Activity NETWORKS GAN, a system for generating activity networks, is designed to save time in the preparation  of activity NETWORKS and to deal conveniently with NETWORK programsA defining description of a programming  language designed for generating activity NETWORK from a set of standard NETWORKS is presented 
CACM-1685

Secure Personal Computing in an Insecure NETWORK A method for implementing secure personal computing in a NETWORK with one or more central facilities is proposedA user can safely store confidential files in the central facility or transmit confidential  data to other users on the NETWORK 
CACM-3158

The Merit of Regional Computing NETWORKS One of the suggested means for stimulating the spread of computing capabilities in institutions  of higher learning is through the construction of regional computing networksOne such NETWORK has  been constructed in the San Francisco Bay Area by Stanford University 
CACM-2197

Dynamic Response Time Prediction for Computer NETWORKS If the ultimate aim of a computing NETWORK is resource sharing, then the human component as  well as the technical component of networking must be fully investigated to achieve this goalThis  research is a first step toward assisting the user in participating in the vast store of resources available  on a NETWORK 
CACM-2951

QUERY:
Number-theoretic algorithms, especially involving prime number series, sieves, and Chinese Remainder theorem. 

SNIPPETS:

PRIME NUMBER (Algorithm 310 $A1))prime numbers, generator  5 CACM March, 1970  Rapp, D 
CACM-2089

An Efficient PRIME NUMBER Generator (Algorithm 357 [A1])prime numbers, factoring, NUMBER theory  3 CACM October, 1969  Singleton, R 
CACM-1840

Coding the Lehmer Pseudo-random NUMBER Generator An algorithm and coding technique is presented for quick evaluation of the Lehmer pseudo-random  NUMBER generator modulo 2**31 - 1, a PRIME Mersenne NUMBER with produces 2**31 - 2 numbers, on a p-bit  (greater than 31) computerThe computation method is extendible to limited problems in modular arithmetic 
CACM-1933

PRIME NUMBER Generator 1; PRIME NUMBER Generator2 (Algorithm 35[A1]; Algorithm 310[A1]; Algorithm 311[A1]) CACM September, 1967  Chartres, BA 
CACM-1539

An Efficient PRIME NUMBER Generator (Algorithm R357) CACM August, 1973  DeMorgan, RM 
CACM-2462

A PRIME NUMBER Generator Using TheTreesort Principle (Algorithm 356 [A1])prime numbers, NUMBER theory, sorting  3 CACM October, 1969  Singleton, R 
CACM-1841

PRIME NUMBER Generator 2 (Algorithm 311 [A1]) CACM September, 1967  Chartres, BA 
CACM-1538

Exact Solution of Linear Equations UsingResidue Arithmetic [F4] (Algorithm 406) CACM March, 1971  Howell, Jresidue arithmetic, symmetric residue, modulus, mixed-radix representation, symmetric mixed-radix  representation, mixed-radix conversion, PRIME number, linear equations, Gaussian elimination, matrix  inversion, determinant, adjoint matrix, ill-condition  3 
CACM-2206

PRIME NUMBER Generator 1 (Algorithm 310 [A1]) CACM September, 1967  Chartres, BA 
CACM-1537

Exact Solution of Linear Equations UsingResidue Arithmetic (Algorithm R406) CACM May, 1973  Howell, Jresidue arithmetic, symmetric residue, modulus, mixed-radix representation, symmetric mixed-radix  representation, mixed radix conversion, PRIME number, linear equations, Gaussian elimination, matrix  inversion, determinant, adjoint matrix, ill-condition  3 
CACM-2507

QUERY:
Articles on text formatting systems, including "what you see is what you get" systems. Examples: t/nroff, scribe, bravo. 

SNIPPETS:

Description of FORMAT, a Text-Processing Programtext processing, indexing, printing, documentation, TEXT editing, formatting, frequency dictionary,  right justification, vocabulary  3It features good performance, totally  free-form input, very flexible FORMATTING capabilities INCLUDING up to eight columns per page, automatic  capitalization, aids for index construction, and a minimum of nontext items 
CACM-1926

What is Proprietary In Mathematical Programming?-Impressionsof a Panel Discussion A panel discussion on "What is Proprietary in Mathematical Programmingwas sponsored by the  Special Interest Committee on Mathematical Programming of the ACM during a Hall of Discussion/on September  7th at the 16th National ACM meeting in Los Angeles 
CACM-0248

Blocks-A New Data type for SNOBOL4 A new data type, called a block, has been implemented for SNOBOL4A block is a three-dimensional  aggregate of characters in the form of a right parallelepiped, best thought of as a three-dimensional  extension to a string 
CACM-2341

A System for Typesetting MathematicsThe system  interfaces directly with TEXT FORMATTING programs, so mixtures of TEXT and mathematics may be handled  simplytypesetting, photocomposition,compiler-compiler, graphics, printing, TEXT processing 
CACM-2786

On the Present and Future of Scientific Computation A pessimistic forecast is given of what can be expected to happen in the application of computers  to the physical sciencesCACM July, 1972  Rice, J 
CACM-2312

Intentional Resolution of Privacy Protection in Database SYSTEMS Traditionally, privacy protection in database SYSTEMS is understood to be the control over  what information a given user can get from a databaseThis paper is concerned with another, independent,  dimension of privacy protection, the control over what a user is allowed to do with a piece of information  supplied to him by the database 
CACM-2876

What is a Code? CACM May, 1960  Patterson, GW 
CACM-0195

Consumer Difficulties With Computerized Transactions: An Empirical InvestigationWhile most management SYSTEMS may be adequate, results of the survey raise concerns about the timeliness and the number of designs of very large linked program packages (as EFT for instance)Errors, SYSTEMS errors, billing errors, management systems, consumers  2 
CACM-3142

Logic and Programming Languages Logic has been long in terested in whether answers to certain questions are computable in principle,  since the outcome puts bounds on the possibilities of formalizationMore recently, precise comparisons  in the efficiency of decision methods have become available through the developments in complexity theory 
CACM-2931

What Can We Do about the Unnecessary Diversityof Notation for Syntactic Definitions? CACM November, 1977  Wirth, Nsyntactic description language, extended BNF  4 
CACM-2909

QUERY:
I'd like to find articles describing the use of singular value decomposition in digital image processing. Applications include finding approximations to the original image and restoring images that are subject to noise. An article on the subject is H. Andrews and C. Patterson "Outer product expansions and their uses in digital image processing", American Mathematical Andrews, H. Patterson, C. 

SNIPPETS:

Using Synthetic IMAGES to Register Real IMAGES with Surface ModelsAutomatic navigation using visible light or radar IMAGES requires exact alignment  of such IMAGES with DIGITAL terrain modelsWe illustrate the technique using LANDSAT IMAGES and DIGITAL terrain models 
CACM-3047

Thinning Algorithms on Rectangular, Hexagonal, and Triangular ArraysIt is found that the algorithm operating with the triangular array is the most sensitive  to IMAGE irregularities and noise, yet it will yield a thinned IMAGE with an overall reduced number of  pointsthinning algorithms, rectangular, hexagonal, triangular arrays, IMAGE processing, skeleton  3 
CACM-2283

Some New Methods of Detecting Step Edges in DIGITAL Pictures This note describes two operators that respond to step edges, but not to rampsThe first  is similar to the DIGITAL Laplacian, but uses the max, rather than the sum, of the x and y second differences 
CACM-3013

Reconstruction of Pictures from Their Projectionsapproximation, biomedical IMAGE processing, efficient encoding, IMAGE processing, linear programming,  MATHEMATICAL programming, Monte Carlo techniques, optimization, picture compression, picture description,  picture processing, stereology, X-ray analysis  3 There are situations in the natural sciences and medicine (e 
CACM-2142

An Experimental Laboratory for Pattern Recognition and Signal ProcessingThe system design  and programming support are described and typical APPLICATIONS in scanner control, optical character  recognition,and IMAGE PROCESSING are presentedscanners, pseudorandom displays, interactive terminal, IMAGE processing, pattern recognition  4 
CACM-2370

Relaxation Methods for IMAGE Reconstruction The problem of recovering an IMAGE (a function of two variables) from experimentally available  integrals of its grayness over thin strips is of great importance in a large number of scientific areasAn important version of the problem in medicine is that of obtaining the exact density distribution  within the human body from X-ray projectionsne approach that has been taken to solve this problem  consists of translating the available information into a system of linear inequalities 
CACM-3015

A Note on Minimal Length Polygonal Approximation to a Digitized Contour A method for extracting a smooth polygonal contour from a digitized IMAGE is illustratedThe ordered sequence of contour points and the connection graph of the IMAGE are first obtained by a modified Ledley algorithm in one IMAGE scan 
CACM-2125

Computer Synthesis of Holograms for 3-D DisplayThe MATHEMATICAL model and computational techniques  of the authors' DIGITAL holographic process are discussed, and APPLICATIONS of computer holography are  suggested Optical and DIGITAL holography are reviewed 
CACM-1686

A Programming System for the On-line Analysis of Biomedical IMAGES A preliminary description of the software for a computer-display system is given with special emphasis on the  man-machine interactionThis  system is intended for a wide variety of biomedical APPLICATIONS 
CACM-2065

Interactive Skeleton Techniques for EnhancingMotion Dynamics in Key Frame Animation A significant increase in the capability for controlling motion dynamics in key frame animation  is achieved through skeleton controlThis technique allows an animator to develop a complex motion  sequence by animating a stick figure representation of an IMAGE 
CACM-2826

QUERY:
I'd like to find articles describing graph algorithms that are based on the eigenvalue decomposition (or singular value decomposition) of the ajacency matrix for the graph. I'm especially interested in any heuristic algorithms for graph coloring and graph isomorphism using this method. 

SNIPPETS:

An Algorithm for the Blocks and Cutnodes of a GRAPH An efficient METHOD is presented for finding blocks and cutnodes of an arbitrary undirected  graphThe GRAPH may be represented either (i) as an ordered list of edges or (ii) as a packed adjacency  MATRIX 
CACM-2177

New Methods to Color the Vertices of a GraphFinally an exact METHOD is given which performs better than the Randall-Brown algorithm and is able to color larger graphs, and the new HEURISTIC methods, the classical methods, and the exact METHOD are comparedA METHOD is developed which is exact for bipartite graphs and is an important part of HEURISTIC procedures to FIND maximal cliques in general graphs 
CACM-3139

An Implemented GRAPH Algorithm for Winning Shannon Switching gamesSince these games are played on graphs, the program is a good example of the implementation of GRAPH  ALGORITHMS In this tutorial paper a computer program which wins Shannon Switching Games is described 
CACM-2368

Efficient ALGORITHMS for GRAPH Manipulation [H] (Algorithm A447) Efficient ALGORITHMS are presented for partitioning a GRAPH into connected components, biconnected  components and simple pathsThe algorithm for partitioning of a GRAPH into simple paths is iterative  and each iteration produces a new path between two vertices already on paths 
CACM-2490

On Computing Sets of Shortest Paths in a GRAPH Two ALGORITHMS are presented that construct the k shortest paths between every pair of vertices  in a directed graphThese ALGORITHMS generalize the Floyd algorithm and the Dantzig algorithm for finding  the shortest path between every pair of vertices in a directed GRAPH 
CACM-2630

Cellular Arrays for the Solution of GRAPH ProblemsFor example, the adjacency MATRIX of a GRAPH is easily mapped onto an array;  each MATRIX element is stored in one cell of the array, and typical row and column operations are readily  implemented by simple cell logic A cellular array is a two-dimensional, checkerboard type interconnection of identical modules  (or cells), where each cell contains a few bits of memory and a small amount of combinational logic,  and communicates mainly with its immediate neighbors in the array 
CACM-2289

A Note on Information Organization and StorageA general METHOD for constructing such a tree or a GRAPH is providedThe use of  different relations and ALGORITHMS results in different information structures, as list, tree, ring,  etc 
CACM-2484

An Application of HEURISTIC Search Methods to Edge and Contour DetectionThis problem can be represented as a shortest path problem on a GRAPH and  can be solved using well-known GRAPH search algorithmsThe relations between this representation of  the minimization problem and a dynamic programming approach are discussed, showing that the GRAPH search  METHOD can lead to substantial improvements in computing time 
CACM-2883

An Algorithm for Finding a Fundamental Set of Cycles of a GRAPH A fast METHOD is presented for finding a fundamental set of cycles for an undirected finite  graphA spanning tree is grown and the vertices examined in turn, unexamined vertices being stored  in a pushdown list to await examination 
CACM-1847

GRAPH COLORING Conditions for the Existenceof Solutions to the Timetable ProblemThese preconditions place additional restrictions on the coloration  of a graphUsing some recent results that convert graphs with preconditions  to graphs without them, it is shown that the existence of a coloration of a GRAPH is the required necessary  and sufficient condition 
CACM-2619

QUERY:
Articles about the sensitivity of the eigenvalue decomposition of real matrices, in particular, zero-one matrices. I'm especially interested in the separation of eigenspaces corresponding to distinct eigenvalues. Articles on the subject: C. Davis and W. Kahn, "The rotation of eigenvectors by a permutation:, SIAM J. Numerical Analysis, vol. 7, no. 1 (1970); G. Stewart, "Error bounds for approximate invariant subspaces of closed linear operators", SIAM J. Numerical Analysis., Vol. 8, no. 4 (1971). Davis, C. Kahn, W. Stewart, G. 

SNIPPETS:

Perturbations of EIGENVALUES of Non-normal MATRICES The problem considered is to give BOUNDS for finite perturbations of simple and multiple EIGENVALUES  of nonnormal matrices, where these BOUNDS are in terms of the eigenvalues, the departure from normality,  and the Frobenius norm of the perturbation matrix, but not in terms of the eigen systemThe BOUNDS which  are derived are shown to be almost attainable for any set of MATRICES 
CACM-2805

Reduction of a Band-Symmetric Generalized EIGENVALUE Problem An algorithm is described for reducing the generalized EIGENVALUE problem Ax = lambda Bx to  an ordinary problem, in case A and B are symmetric band MATRICES with B positive definiteThe algorithm reduces the generalized problem to  an ordinary EIGENVALUE problem for a symmetric band matrix C whose bandwidth is the same as A and B 
CACM-2554

A Simple Algorithm for Computing the Generalized Inverse of a Matrix The generalized inverse of a matrix is important in ANALYSIS because it provides an extension  of the concept of an inverse which applies to all matricesIt also has many applications in NUMERICAL  analysis, but it is not widely used because the existing algorithms are fairly complicated and require  considerable storage space 
CACM-1423

Incorporating Origin Shifts into the QRAlgorithm for Symmetric Tridiagonal MATRICES The QR iteration for the EIGENVALUES of a symmetric tridiagonal matrix can  be accelerated by incorporating a sequence of origin shiftsThe origin shift may be either subtracted directly from the diagonal elements of the matrix or incorporated by means of an implicit algorithm 
CACM-2047

A Fast Method for Solving a Class of Tridiagonal LINEAR SystemsIt is also proved that the computed LU DECOMPOSITION converges  when floating-point arithmetic is used and that the limits of the LU diagonals using floating point are  roughly within machine precision of the limits using REAL arithmetic The solution of LINEAR systems having real, symmetric, diagonally dominant,tridiagonal coefficient  MATRICES with constant diagonals is considered 
CACM-2697

Tridiagonalization by Permutations Tridiagonalizing a matrix by similarity transformations is an important computational tool  in NUMERICAL LINEAR algebraThe algorithm requires no arithmetic while the number  of comparisons, the number of assignments, and the number of increments are LINEAR in n 
CACM-2695

Storage Reorganization Techniques forMatrix Computation in a Paging Environment In order to multiply MATRICES while minimizing the number of page fetches required, it is often more efficient to reorganize the data into submatrix form and to use block multiplication  rather than to use the best known algorithms which leave the MATRICES stored in row-(or column-)oriented formAn efficient method for accomplishing this reorganization is given 
CACM-3152

A Variation of the Goodman-Lance Method forthe Solution of Two-Point Boundary Value Problems A recently published method for the interpolative solution of nonlinear equations is improved, and applied to give a significant variation of the Goodman-Lance method for the solution of two-point boundary value problemsThe resulting method applies in particular to the NUMERICAL solution of optimal control problems in the Euler-Lagrange formulation 
CACM-2000

Solution of the Matrix Equation AX+XB=C [F4] (Algorithm A432)linear algebra, matrices, LINEAR equations  5 CACM September, 1972  Bartels, R 
CACM-2284

An O(n) Algorithm for Determining a Near-OptimalComputation Order of Matrix Chain Products14  CA780703 DH February 8, 1979  2:46 PM  3075 4 3085 3085 4 3085 2557 5 3085 3085 5 3085 3085 5 3085 3085 5 3085  x Mn  where Mi's are MATRICES 
CACM-3085

QUERY:
Currently interested in isolation of root of polynomial; there is an old more recent material. Heindel, L. 

SNIPPETS:

Addendum to M. L. Patrick Paper CACM April, 1974  Simmons, GC 
CACM-2660

An Algorithm for Generating ROOT Locus Diagrams A technique for using a digital computer to draw both ordinary and time-lag ROOT locus diagrams  is describedOrdinary diagrams are drawn much faster and more accurately than ever before 
CACM-1615

A Stopping Criterion for POLYNOMIAL ROOT Finding When searching for the ROOT of a polynomial, it is generally difficult to know just when to  accept a number as an adequate approximation to the rootIn this paper an algorithm is presented which  allows one to terminate the iteration process on the basis of calculated bounds for the roundoff error  which occurs in evaluating the POLYNOMIAL 
CACM-1524

Optimal Starting Approximations for GeneratingSquare ROOT for Slow or No Divide On machine with slow or no division, it is preferable to use an iterative scheme for the square ROOT different from the classical Heron schemeThe problem of optimal initial  approximants is considered, and some optimal POLYNOMIAL initial  approximations are tabulated 
CACM-1999

Roots of Low-Order POLYNOMIAL Equations (Algorithm 326 [C2])root finders, POLYNOMIAL equation roots, quadratic equation roots, cubic equation roots, biquadratic  equation roots, POLYNOMIAL zeros  5 CACM April, 1968  Nonweiler, T 
CACM-1763

A Note on Range Transformations for Square ROOT and Logarithm1 will give examples of this usage for the square ROOT and logarithm function  for both binary and decimal machines There was the germ of an idea in two previous papers [1,2] which no one seems to have picked  up in almost five years 
CACM-0848

Orthogonal POLYNOMIAL Least Squares Surface Fit (Algorithm 164) CACM April, 1963  Clark, RE 
CACM-0884

The Lemniscate ConstantsThis MATERIAL can be used  for teaching purposes, and there is much relevant and interesting historical MATERIAL The lemniscate constants, and indeed some of the methods used for actually computing them,  have played an enormous part in the development of mathematics 
CACM-2808

Roots of Polynomials by a Root-Squaringand Resultant routine (Algorithm 340 [C2])root finders, roots of POLYNOMIAL equations, POLYNOMIAL zeros, root-squaring operations, Graeffe  method, resultant procedure, subresultant procedure, testing of roots, acceptance criteria  5 CACM May, 1969  Noltemeier, A 
CACM-1893

Division and Square ROOT in the Quater-Imaginary Number System CACM April, 1961  Nadler, M 
CACM-0334

QUERY:
Probabilistic algorithms especially those dealing with algebraic and symbolic manipulation. Some examples: Rabiin, "Probabilistic algorithm on finite field", SIAM Waztch, "Probabilistic testing of polynomial identities", SIAM Rabin,M. 

SNIPPETS:

Tests of PROBABILISTIC Models for Propagation of Roundoff ErrorsThe purpose of this paper is to give precise descriptions of certain  PROBABILISTIC models for roundoff error, and then to describe a series of experiments for TESTING the  validity of these models In any prolonged computation it is generally assumed that the accumulated effect of roundoff  errors is in some sense statistical 
CACM-1474

Weighted Derivation TreesAn ALGORITHM is presented for constructing the optimal derivation tree having  the same structure as a given weighted derivation treeIn addition, the correctness of the ALGORITHM  is established 
CACM-2836

Breaking Substitution Ciphers Using a Relaxation AlgorithmIn this paper the problem of breaking substitution ciphers is represented as a PROBABILISTIC labeling problemCryptography, substitution ciphers, PROBABILISTIC classification, relaxation  3 
CACM-3175

Complexity of Computations The framework for research in the theory of complexity of computations is described, emphasizing  the in terrelation between seemingly diverse problems and methodsIllustrative EXAMPLES of practical  and theoretical significance are given 
CACM-2932

Dynamic Memory Repacking A PROBABILISTIC model of a multiprogramming system is exercised in order to determine the conditions  under which the dynamic repacking of main memory is beneficialdynamic memory repacking, memory compaction,storage fragmentation, multiprogramming system model,  PROBABILISTIC model, central processor productivity, resource utilization, system throughput  4 
CACM-2681

A Queuing Model of a MultiprogrammedComputer with a Two-Level Storage System The results are presented of an analysis of a PROBABILISTIC model of a multiprogrammed computer  system with a two-level storage system in which there is sequential dependency of accesses between the  devicesExpressions are obtained for the long-run probability that both the CPU and each of the storage  devices are busy 
CACM-2560

Hierarchical Storage in Information Retrieval A PROBABILISTIC analysis is employed to determine the effect of hierarchical storage organizations  on information retrieval operationsThe data storage hardware is assumed to consist on n-levels of  linearly connected memory hardware with increasing data access times and increasing data storage capabilities 
CACM-2516

A Method for Composing Simple Traditional Music by Computer A method is described for composing musical rounds by computerThis method uses some music  theory plus additional heuristics 
CACM-2580

Randomized Binary Search Technique A mathematical model is developed for the mean and variance of the number of trials to recover  a given document in a randomly received list of filesThe search method described is binary in nature  and offers new potential for information retrieval systems 
CACM-1935

General Performance Analysis of Key-to-AddressTransformation Methods Using an Abstract File ConceptIn this approach the keys in a file are assumed to have been selected from the  key space according to a certain PROBABILISTIC selection ALGORITHM This paper presents a new approach to the analysis of performance of the various key-to-address  transformation methods 
CACM-2437

QUERY:
Fast algorithm for context-free language recognition or parsing 

SNIPPETS:

The Restriction LANGUAGE for Computer Grammars of Natural LANGUAGE Over the past few years, a number of systems for the computer analysis of natural LANGUAGE  sentences have been based on augmented CONTEXT-FREE grammars: a CONTEXT-FREE grammar which defines a  set of parse trees for a sentence, plus a group of restrictions to which a tree must conform in order  to be a valid sentence analysisIt is based  on ten years' experience PARSING text sentences with the comprehensive English grammar of the N 
CACM-2739

The Augmented Predictive Analyzer for Context-FreeLanguages-Its Relative EfficiencyIn section 2, the augmented predictive analyzer as a PARSING  ALGORITHM for arbitrary CONTEXT-FREE languages is compared with two other PARSING algorithms: a selective  top-to-bottom ALGORITHM similar to Irons' "error correcting parse algorithm" and an immediate constituent  analyzer which is an extension of Sakai-Cocke's ALGORITHM for normal grammars It has been proven by Greibach that for a given CONTEXT-FREE grammar G, a standard-form grammar  Gs can be constructed, which generates the same languages as is generated by G and whose rules are all  of the form Z --> cY(1) 
CACM-1350

Translation Equations Input limited transduction expressions, or translation equations, are used to describe the syntax and left-context sensitive semantics for  CONTEXT-FREE languagesWithin the framework described string  RECOGNITION and PARSING may be treated as special cases of the translation  problem 
CACM-2112

An Efficient CONTEXT-FREE PARSING ALGORITHM A PARSING ALGORITHM which seems to be the most efficient general CONTEXT-FREE  ALGORITHM known is describedIt is similar to both Knuth's LR(k) ALGORITHM  and the familiar top-down ALGORITHM 
CACM-2110

A Syntactic ALGORITHM for Peak Detectionin Waveforms with Applications to Cardiography Peaks in a digitized waveform are detected by an ALGORITHM incorporating piecewise linear approximation  and tabular PARSING techniquesThe ALGORITHM is of sufficient speed to allow on-line  real-time processing 
CACM-2754

Context-Sensitive PARSING This paper presents a canonical form for context-sensitive derivations and a PARSING ALGORITHM which finds each context-sensitive analysis once and only onceThe amount of memory required by the ALGORITHM is essentially no more than the required to  store a single complete derivation 
CACM-2030

Weighted Derivation TreesAn ALGORITHM is presented for constructing the optimal derivation tree having  the same structure as a given weighted derivation treeIn addition, the correctness of the ALGORITHM  is established 
CACM-2836

The Intrinsically Exponential Complexity ofthe Circularity Problem for Attribute Grammars Attribute grammars are an extension of CONTEXT-FREE grammars devised by Knuth as a mechanism  for including the semantics of a CONTEXT-FREE LANGUAGE with the syntax of the languageSpecifically, it is shown that any deterministic ALGORITHM which solves the problem must for infinitely  many cases use an exponential amount of timen improved version of Knuth's circularity testing ALGORITHM  is also given, which actually solves the problem within exponential time 
CACM-2703

An ALGORITHM for the Construction Of Bounded-Context Parsers An ALGORITHM is described which accepts an arbitrary CONTEXT-FREE grammar and constructs a bounded-context parser for it whenever such a parser existsIn the first part of the paper the definition of a CONTEXT-FREE grammar and the working of a bounded-context parser are recalled 
CACM-2061

Generating Parsers for Affix GrammarsThe paper concludes by discussing briefly the  applicabilities of the conversion ALGORITHM and affix grammars in general, and some possible extensions  to Koster's definition of affix grammarsalgorithmic LANGUAGE processing,bottom-up parsing, Floyd Production Language, parsing, syntax  directed compiling, translator writing systems, two-level grammars  3 
CACM-2301

QUERY:
Articles describing the relationship between data types and concurrency (e.g. what is the type of a process? when is a synchronization attempt between two processes "type correct"? in a message-passing system is there any notion of the types of messages?--i.e. any way to check that the sender of the message and the receiver are both treating the bit stream as some particular type) 

SNIPPETS:

A Model for TYPE CheckingFor CORRECT compilation and execution, the following question  then arises: is a program properly constructed so that its operations and operands are compatibleThis paper attempts to isolate  the NOTION of TYPE checking and presents a partial solution to the TYPE checking problem based on the  notions of abstraction and application of functions 
CACM-2265

Abstract DATA TYPES and Software Validation A DATA abstraction can be naturally specified using algebraic axiomsThe virtue of these  axioms is that they permit a representation-independent formal specification of a DATA TYPE 
CACM-3031

Some Ideas on DATA TYPES in High-Level LanguagesAmong these are the need for a notation for iterating  over the elements of any finite set (instead of the more narrow for i:= 1 to n notation), the use of  the domain of an array as a DATA type, the need for a simple notation for allowing TYPES of parameters  to be themselves parameters (but in a restrictive fashion), and resulting problems with conversion of  values from one TYPE to another A number of issues are explored concerning the NOTION that a DATA TYPE is a set of values together  with a set of primitive operations on those values 
CACM-2956

Abstract DATA TYPES and the Development of DATA Structures Abstract DATA TYPES can play a significant role in the development of software that is reliable,  efficient, and flexibleThis paper presents and discusses the application of an algebraic technique  for the specification of abstract DATA TYPES 
CACM-2958

On the Meaning of Names in Programming Systems It is assumed that there is a similarity of function between the DATA names of a programming  language and the file names of an operating systemThe two functions are discussed in terms of the  same basic concepts in order to identify the extent to which they overlap 
CACM-2184

Robot DATA Screening: A Solution to MultivariateType Problems in the Biological and Social Sciences A new approach is outlined toward the solution of the TYPE of multivariate problem that is  found usually in the biological and social sciences as well as in medicineThis approach uses a "logical"  rather than a "statistical" criterion by which variables are grouped into a deterministic model 
CACM-1398

Cellular Arrays for the Solution of Graph Problems A cellular array is a two-dimensional, checkerboard TYPE interconnection of identical modules  (or cells), where each cell contains a few bits of memory and a small amount of combinational logic,  and communicates mainly with its immediate neighbors in the arrayThe chief computational advantage  offered by cellular arrays is the improvement in speed achieved by virtue of the possibilities for parallel  processing 
CACM-2289

Least Squares Fitting of Planes to Surfaces Using Dynamic Programming Dynamic programming has recently been used by Stone, by Bellman and by Gluss to determine the  closet fit of broken line segments to a curve in an interval under the constraint that the number of  segments is fixedIn the present paper successive models are developed to extend the method to the  fitting of broken plane segments to surfaces z=g(x,y) defined over certain TYPES of subareas of the (x,y)-space 
CACM-0867

An Algorithm for Finding a Fundamental Set of Cycles of a Graph A fast method is presented for finding a fundamental set of cycles for an undirected finite  graphA spanning tree is grown and the vertices examined in turn, unexamined vertices being stored  in a pushdown list to await examination 
CACM-1847

An Inductive Approach to Language Translation The possibility of natural language translation by means of fixed operations on example translations  is consideredThe conception of sentence translation which motivates the work is informally presented,  and the measurement of physical similarity in pairs of strings is discussed, a NOTION which plays a central  role in the proposed TYPE of translator 
CACM-0982

QUERY:
What is the type of a module? (I don't want the entire literature on Abstract Data Types here, but I'm not sure how to phrase this to avoid it. I'm interested in questions about how one can check that a module "matches" contexts in which it is used.) 

SNIPPETS:

ABSTRACT DATA TYPES and Software ValidationFirst, it is shown how the use of algebraic axiomatizations can simplify  the process of proving the correctness of an implementation of an ABSTRACT DATA TYPE A DATA abstraction can be naturally specified using algebraic axioms 
CACM-3031

DATA Filtering Applied to Information Storage and Retrieval Applications Manipulation of DATA strings is the most complex processing function in information storage  and retrieval applicationsData string manipulation is discussed within the context of an interpretive  processing environment controlled by the use of procedural directives 
CACM-1359

Logic and Programming Languages Logic has been long in terested in whether answers to certain QUESTIONS are computable in principle,  since the outcome puts bounds on the possibilities of formalizationMore recently, precise comparisons  in the efficiency of decision methods have become available through the developments in complexity theory 
CACM-2931

Guides to Teaching COBOL The teaching of COBOL can be divided into three main subject areasThey are the syntax of  COBOL, the use of such syntax in solving any given problem, and programming concepts 
CACM-0595

Fen-An Axiomatic Basis for Program Semantics A formal system is presented which abstracts the notions of DATA item, function, and relationIt is argued that the system is more suitable than set theory (or its derivatives) for the concise and  accurate description of program semantics 
CACM-2470

One Way of Estimating Frequencies of Jumps in a Program For the segmentation of a program it is useful to have a reasonable estimation of the values  of S(ij), where S(ij) is the mean value of the number of jumps from the i-th instruction on to the j-th  instruction in the run timeIn the cases where the S(ij) are estimated directly, the structure of the  whole program must be generally taken into account; therefore it is very difficult for the programmer  and/or the translator to obtain a good estimation of the S(ij) 
CACM-1727

On the Meaning of Names in Programming Systems It is assumed that there is a similarity of function between the DATA names of a programming  language and the file names of an operating systemThe two functions are discussed in terms of the  same basic concepts in order to identify the extent to which they overlap 
CACM-2184

Least Squares Fitting of Planes to Surfaces Using Dynamic Programming Dynamic programming has recently been used by Stone, by Bellman and by Gluss to determine the  closet fit of broken line segments to a curve in an interval under the constraint that the number of  segments is fixedIn the present paper successive models are developed to extend the method to the  fitting of broken plane segments to surfaces z=g(x,y) defined over certain TYPES of subareas of the (x,y)-space 
CACM-0867

Perfect Hashing Functions: A SingleProbe Retrieving Method for Static Sets A refinement of hashing which allows retrieval of an item in a static table with a single probe  is consideredGiven a set I of identifiers, two methods are presented for building, in a mechanical  way, perfect hashing functions, i 
CACM-2905

Further Remarks on Line Segment Curve-Fitting Using Dynamic Programming In a recent paper, Bellman showed how dynamic programming could be used to determine the solution  to a problem previously considered by StoneThe problem comprises the determination, given N, of the  N points of subdivision of a given interval (a,B) and the corresponding line segments, that give the  best least squares fit to a function g(x) in the interval 
CACM-0497

QUERY:
What does type compatibility mean in languages that allow programmer defined types? (You might want to restrict this to "extensible" languages that allow definition of abstract data types or programmer-supplied definitions of operators like *, +.) 

SNIPPETS:

Abstraction and Verification in Alphard: Definingand Specifying Iteration and Generators The Alphard "form" provides the PROGRAMMER with a great deal of control over the implementation  of ABSTRACT DATA typesA means of specializing Alphard's loops to operate  on ABSTRACT entities without explicit dependence on the representation of those entities is in troduced 
CACM-2940

The Treatment of DATA TYPES in EL1 In constructing a general purpose programming language, a key issue is providing a sufficient  set of DATA TYPES and associated operations in a manner that permits both natural problem-oriented notation  and efficient implementationThe EL1 language contains a number of features specifically designed to  simultaneously satisfy both requirements 
CACM-2651

Some Ideas on DATA TYPES in High-Level LanguagesAmong these are the need for a notation for iterating  over the elements of any finite set (instead of the more narrow for i:= 1 to n notation), the use of  the domain of an array as a DATA type, the need for a simple notation for allowing TYPES of parameters  to be themselves parameters (but in a restrictive fashion), and resulting problems with conversion of  values from one TYPE to another A number of issues are explored concerning the notion that a DATA TYPE is a set of values together  with a set of primitive operations on those values 
CACM-2956

A Language Extension for Expressing Constraints on DATA AccessThe approach can be used to extend any strongly-typed  language, but is particularly suitable for extending LANGUAGES that support the notion of ABSTRACT DATA  typesProgramming languages, access control, DATA types, ABSTRACT DATA types, TYPE checking, capabilities  4 
CACM-3105

Fen-An Axiomatic Basis for Program SemanticsIt is also demonstrated  that completely new primitive TYPES can be introduced into LANGUAGES through the mechanism of singleton  DATA TYPES A formal system is presented which abstracts the notions of DATA item, function, and relation 
CACM-2470

Dynamic Partitioning for Array LanguagesThese DEFINITIONS are  motivated with several realistic examples to illustrate the value of partitioning for array languagesOf general interest is the DATA structure for partitioning 
CACM-2254

Programming Languages, Natural Languages, and Mathematics Some social aspects of programming are illuminated through analogies with similar aspects of  mathematics and natural languagesThe split between pure and applied mathematics is found similarly  in programming 
CACM-2705

A Model for TYPE Checking Most current programming LANGUAGES treat computation over different classes of objects (eg 
CACM-2265

Automatic DATA Structure Selection: An Example and Overview The use of several levels of abstraction has proved to be very helpful in constructing and  maintaining programsWhen programs are designed with ABSTRACT DATA TYPES such as sets and lists, PROGRAMMER  time can be saved by automating the process of filling in low-level implementation details 
CACM-3103

ABSTRACT DATA TYPES and the Development of DATA Structures ABSTRACT DATA TYPES can play a significant role in the development of software that is reliable,  efficient, and flexibleThis paper presents and discusses the application of an algebraic technique  for the specification of ABSTRACT DATA TYPES 
CACM-2958

QUERY:
List all articles dealing with data types in the following languages: that are referenced frequently in papers on the above languages (e.g. catch any languages with interesting type structures that I might have missed). 

SNIPPETS:

Some Ideas on DATA TYPES in High-Level LanguagesAmong these are the need for a notation for iterating  over the elements of any finite set (instead of the more narrow for i:= 1 to n notation), the use of  the domain of an array as a DATA type, the need for a simple notation for allowing TYPES of parameters  to be themselves parameters (but in a restrictive fashion), and resulting problems with conversion of  values from one TYPE to another A number of issues are explored concerning the notion that a DATA TYPE is a set of values together  with a set of primitive operations on those values 
CACM-2956

Programming Languages: History and Future This paper discusses both the history and future of programming LANGUAGES (= higher level languages)Some of the difficulties in writing such a history are indicated 
CACM-2316

Dynamic Partitioning for Array LanguagesThese definitions are  motivated with several realistic examples to illustrate the value of partitioning for array languagesOf general interest is the DATA structure for partitioning 
CACM-2254

Programming Languages, Natural Languages, and Mathematics Some social aspects of programming are illuminated through analogies with similar aspects of  mathematics and natural languagesThe split between pure and applied mathematics is found similarly  in programming 
CACM-2705

Requirements for Real-Time LANGUAGES Real-time LANGUAGES have different requirements from other programming LANGUAGES because of  the special nature of their applications, the environment in which their object programs are executed  and the environment in which they may be compiledIt may not be the language extensions that ultimately  advance developments in the field 
CACM-1459

Abstraction and Verification in Alphard: Definingand Specifying Iteration and Generators The Alphard "form" provides the programmer with a great deal of control over the implementation  of abstract DATA typesResults are obtained that for common special  cases of these loops are essentially identical to the corresponding constructs in other LANGUAGES 
CACM-2940

The "Plankalkul" of Konrad Zuse: A Forerunnerof Today's Programming LanguagesAlthough this early approach to a programming language  did not lead to practical use, the plan is described here because it contains features that are standard  in today's programming LANGUAGES Plankalkul was an attempt by Korrad Zuse in the 1940's to devise a notational and conceptual  system for writing what today is termed a program 
CACM-2305

The Structure of Programming LanguagesThe advantages, disadvantages and factors influencing the choice of a form of component  for a language are discussed, and the paper concludes with the suggestion that programming LANGUAGES  evolve toward one which will permit all the most convenient ways of structuring programs, organizing  systems and referencing DATA In this paper the major components of every programming language are identified as: (1) the  elementary program statement, (2) mechanisms for linking elementary statements together, (3) the means  by which a program can obtain DATA inputs 
CACM-1485

A Comparison of List-Processing Computer Languages(Including a Detailed Comparison of COMIT, IPL-V, LISP 1.5, and SLIP)Important common features of list-processing LANGUAGES are reviewed: forms of DATA STRUCTURES  which are manipulated, necessity for dynamic allocation of storage, use of pushdown stores, and use of  recursive operations A detailed comparison is presented of COMIT, IPL-V, LISP 1 
CACM-1098

PL/I LIST ProcessingMost list-processing LANGUAGES have suffered from their inability to deal directly with complex DATA  STRUCTURES and/or from their inability to perform the complete range of programming language operations  upon the DATA LIST structuresWith these new  facilities, it is possible to write PL/I procedures that operate on simple and complex DATA LIST organizations 
CACM-1588

QUERY:
Theory of distributed systems and databases. Subtopics of special interest include reliability and fault-tolerance in distributed systems, atomicity, distributed transactions, synchronization algorithms, resource allocation; lower bounds and models for asynchronous parallel systems. Also theory of communicating processes and protocols. P. Box 2158 Yale Station, New Haven, Conn. 06520 

SNIPPETS:

Self-stabilizing SYSTEMS in Spite of DISTRIBUTED Controlmultiprocessing, networks, self-stabilization, synchronization, mutual exclusion, robustness, sharing,  error recovery, DISTRIBUTED control, harmonious cooperation, self-repair  4 CACM November, 1974  Dijkstra, E 
CACM-2578

Time, Clocks, and the Ordering of Events in a DISTRIBUTED SystemThe use of the total ordering  is illustrated with a method for solving SYNCHRONIZATION problemsDistributed systems, computer networks, clock synchronization, multiprocess SYSTEMS  4 
CACM-3082

A Methodology for the Design of DISTRIBUTED Information SYSTEMS A macro model of a DISTRIBUTED information system in presentedThe model describes the major costs of using an information system from the perspective of the end-user 
CACM-3137

Ethernet: DISTRIBUTED Packet Switching for Local Computer Networks Ethernet is a branching broadcast communication system for carrying digital data packets among  locally DISTRIBUTED computing stationsThe packet transport mechanism provided by Ethernet has been  used to build SYSTEMS which can be viewed as either local computer networks or loosely coupled multiprocessors 
CACM-2849

DISTRIBUTED Processes: A Concurrent Programming Concept A language concept for concurrent PROCESSES without common variables is introducedThese  PROCESSES communicate and synchronize by means of procedure calls and guarded regions 
CACM-3043

High Level Programming for DISTRIBUTED Computing Programming for DISTRIBUTED and other loosely coupled SYSTEMS is a problem of growing interestThis paper describes an approach to DISTRIBUTED computing at the level of general purpose programming languages 
CACM-3148

SYNCHRONIZATION with Eventcounts and Sequencers SYNCHRONIZATION of concurrent PROCESSES requires controlling the relative  ordering of events in the processesDirect control of ordering seems to simplify correctness arguments and also simplifies implementation in DISTRIBUTED SYSTEMS 
CACM-3128

An Improved Algorithm for Decentralized Extrema-Findingin Circular Configurations of PROCESSES This note presents an improvement to LeLann's algorithm for finding the largest (or smallest) of a set of uniquely numbered PROCESSES arranged in a circle, in which no central controller exists and the number of PROCESSES is not known a prioriDecentralized algorithms, DISTRIBUTED systems, operating SYSTEMS  4 
CACM-3141

A Correctness Proof of a Topology InformationMain tenance Protocol for a DISTRIBUTED Computer Network In order for the nodes of a DISTRIBUTED computer network to communicate, each node must have  information about the network's topologySince nodes and links sometimes crash, a scheme is needed  to update this information 
CACM-2949

An Efficient Method for Generating Uniformly DistributedPoints on the Surface on an n-Dimensional Sphere (Corrigendum) CACM October, 1959  Cook, JM 
CACM-0052

QUERY:
Computer performance evaluation techniques using pattern recognition and clustering. LA 70803 

SNIPPETS:

The Role of COMPUTER System Models in PERFORMANCE EVALUATION Models constitute a useful means of investigating COMPUTER system performanceThis paper  examines the interrelationships between models and other methods for evaluating the PERFORMANCE of COMPUTER  systems and establishes circumstances under which the use of a model is appropriate 
CACM-2318

System PERFORMANCE Evaluation: Survey and Appraisal The state of the art of system PERFORMANCE EVALUATION is reviewed and EVALUATION goals and  problems are examinedThroughput, turnaround, and availability are defined as fundamental measures  of performance; overhead and CPU speed are placed in perspective 
CACM-1653

A Software Design and EVALUATION SystemA system which integrates PERFORMANCE EVALUATION with design and implementation is described A critical failure of current software system design and implementation methodology is that  the PERFORMANCE of a proposed design is not evaluated before it is actually implemented 
CACM-2542

Cost/Utilization: A Measure of System PERFORMANCE A method is presented for evaluating COMPUTER system PERFORMANCE in terms of a cost/utilization  factor and a measure of imbalancecomputer system, PERFORMANCE evaluation, cost/utilization, system balance  2 
CACM-2984

PERFORMANCE of Rollback Recovery Systems under Intermittent FailuresThe model is used to derive the principal PERFORMANCE measures, including availability,  response time, and the system saturation pointDatabase reliability, file systems, checkpoints, recovery procedures, checking techniques, reliability  and system PERFORMANCE EVALUATION  3 
CACM-3089

PERFORMANCE EVALUATION of Highly ConcurrentComputers by Deterministic Simulation Simulation is presented as a practical technique for PERFORMANCE EVALUATION of alternative  configurations of highly concurrent computersA technique is described for constructing a detailed  deterministic simulation model of a system 
CACM-3048

A Methodology for Interactive COMPUTER Service Measurement A measurement methodology applicable to in teractive COMPUTER service is describedIts primary  purpose is to enable external, user-oriented assessment of COMPUTER performance, instead of the more  frequently used in ternal system measurement TECHNIQUES 
CACM-2894

A Comparative Study of COMPUTER Programsfor Integrating Differential Equations A study comparing the PERFORMANCE of several COMPUTER programs for integrating systems of ordinary  differential equations is reportedFor the particular problems and criteria used in  the investigation it was found that a program based on rational extrapolation showed the best PERFORMANCE 
CACM-2268

Effective Information Retrieval Using Term AccuracyMuch of the published EVALUATION work is based on measuring the retrieval PERFORMANCE of an average  user queryIn the present  study, retrieval EVALUATION is based on optimizing the PERFORMANCE of a specific user query 
CACM-2990

PERFORMANCE Monitoring in a Time-Sharing System A software measurement facility which is part of a general purpose time-sharing system is describedThe Date Collection Facility (DCF) has been implemented in the Michigan Terminal System (MTS) for the  System/360 model 67 
CACM-1827

QUERY:
Analysis and perception of shape by humans and computers. Shape descriptions, shape recognition by computer. Two-dimensional shapes. Measures of circularity. Shape matching. 

SNIPPETS:

COMPUTER Generation of Gamma Random Variateswith Non-integral SHAPE Parameters When the SHAPE parameter, a, is integral, generating gamma random variables with a digital  COMPUTER is straightforwardThere is no simple method for generating gamma random variates with non-integral  SHAPE parameters 
CACM-2569

A Syntactic Algorithm for Peak Detectionin Waveforms with Applications to Cardiography Peaks in a digitized waveform are detected by an algorithm incorporating piecewise linear approximation  and tabular parsing techniquesSeveral parameters serve to identify the waveform context enabling accurate  measurement of peak amplitude, duration, and SHAPE 
CACM-2754

The Synthesis of Solids Bounded by Many Faces A technique is presented which allows a class of solid objects to be synthesized and stored  using a computerSynthesis begins with primitive solids like a cube, wedge, or cylinder 
CACM-2771

Generating Beta Variates with Nonintegrel SHAPE Parameters A new rejection method is described for generating beta variatesThe method is compared with  previously published methods both theoretically and through COMPUTER timings 
CACM-3107

COMPUTER Generation of Gamma Random Variables - IIGamma variables, rejection method, COMPUTER methods  5 A rejection method is proposed for generating gamma variates with nonintegral SHAPE parameter  a, a > 1 
CACM-3046

Global Optimization by Suppression of Partial Redundancies The elimination of redundant computations and the moving of invariant computations out of loops are often done separately, with invariants  moved outward loop by loopWe propose to do both at once and to move each expression directly to the entrance of the outermost loop in which it is invariant 
CACM-3125

Sampling from the Gamma Distribution on a COMPUTER This paper describes a method of generating gamma variates that appears to be less costly than  Wallace's recently suggested methodFor large SHAPE parameter (a); the cost of computation is proportional  to (a), whereas Wallace's method is proportional to (a) 
CACM-2847

COMPUTER Generation of Gamma Random VariablesGamma variables, rejection method, COMPUTER methods  5 A new method for generating random variables from the gamma distribution with nonintegral SHAPE  parameter a is proposed 
CACM-3098

A Generalization of AVL Trees A generalization of AVL trees is proposed in which imbalances up to (triangle shape) is a small  integerAn experiment is performed to compare these trees with standard AVL trees and with balanced  trees on the basis of mean retrieval time, of amount of restructuring expected, and on the worst case  of retrieval time 
CACM-2455

An Application of Heuristic Search Methods to Edge and Contour Detection This paper presents a method for detecting edges and contours in noisy picturesThe properties  of an edge are embedded in a figure of merit and the edge detection problem becomes the problem of minimizing  the given figure of merit 
CACM-2883

QUERY:
Texture analysis by computer. Digitized texture analysis. Texture synthesis. Perception of texture. 

SNIPPETS:

TEXTURE and Reflection in COMPUTER Generated Imagescomputer graphics, graphic display, shading, hidden surface removal  3 In 1974 Catmull developed a new algorithm for rendering images of bivariate surface patches 
CACM-2829

A Region Coloring Technique for Scene ANALYSIS A method of converting a picture into a "cartoon" or "map" whose regions correspond to differently  textured regions is describedTexture edges in the picture are detected, and solid regions surrounded  by these (usually broken) edges are "colored in" using a propagation process 
CACM-2523

The SYNTHESIS of Solids Bounded by Many Faces A technique is presented which allows a class of solid objects to be synthesized and stored  using a computerSynthesis begins with primitive solids like a cube, wedge, or cylinder 
CACM-2771

A Rapid Method for Digital Filtering Since much of the COMPUTER time spent in time-series ANALYSIS is used for multiplications,  a minimum multiplication method was devised for digital filtering, with the expectation that it would  be useful in the on line, real-time ANALYSIS of biological dataThe filters are constructed from a succession  of readily analyzable components in a manner that facilitates cascading 
CACM-1002

A COMPUTER Generated Aid for Cluster ANALYSIS A COMPUTER generated graphic method, which can be used in conjunction with any hierarchical  scheme of cluster analysis, is described and illustratedThe graphic principle used is the representation  of the elements of a data matrix of similarities or dissimilarities by COMPUTER printed symbols (of character  overstrikes) of various shades of darkness, where a dark symbol corresponds to a small dissimilarity 
CACM-2494

Numerical Mathematics and COMPUTER ScienceThese are: foundations (finite precision number systems, computational  complexity), SYNTHESIS and ANALYSIS of algorithms, ANALYSIS of error, programs and program libraries Numerical mathematics is viewed as the ANALYSIS of continuous algorithms 
CACM-2325

Digital SYNTHESIS of Correlated Stationary NoiseIn order to  simplify discussion of the statistical properties of the noise generated, the technique is first presented  in terms of exact harmonic analysisIn practice, discrete harmonic ANALYSIS as presented in the third  section is used 
CACM-0533

Least-Squares ANALYSIS of Resonance Spectra on Small ComputersBy using the  cut step procedure for convergence and by imposing physical constraints on the functional form of the  calculation it is possible to make the ANALYSIS on a small computerThe ANALYSIS has been carried out  on an IBM 1410 COMPUTER with a 40,000 BCD core memory 
CACM-1260

An Interactive COMPUTER Graphics Approach to Surface Representation An in teractive COMPUTER graphics method has been developed for the rapid generation of arbitrary  shaped three-dimensional surfacescomputer graphics, three-dimensional surface representation, splines, lofting,finite element input  methods  3 
CACM-2924

Illumination for COMPUTER Generated Pictures The quality of COMPUTER generated images of three-dimensional scenes depends on the shading  technique used to paint the objects on the cathode-ray tube screencomputer graphics, graphic display, hidden surface removal 
CACM-2751

QUERY:
The use of operations research models to optimize information system performance. This includes fine tuning decisions such as secondary index selection, file reorganization, and distributed databases. 

SNIPPETS:

Optimal REORGANIZATION of DISTRIBUTED Space Disk FilesA disk file organization  which allows for DISTRIBUTED free space is described In most database organizations, the cost of accessing the database will increase due to structural  changes caused by updates and insertions 
CACM-2816

Evaluation and SELECTION of File Organization-A Model and SYSTEM This work first discusses the factors that affect file (data base) organization performance,  an elusive subject, and then presents a methodology, a model and a programmed SYSTEM to estimate primarily  total storage costs and average access time of several file organizations, given a specific data base,  query characterization and device-related specificationsThe SYSTEM is a convenient tool to study file  structures and to facilitate as much as possible the process of data base structure design and evaluation 
CACM-2452

Optimal Program and Data Locations in Computer Networks An optimization procedure for the allocation of program and data files in a computer network  is presentedThis algorithm takes into account the dependencies between files and programs such as  occur in real heterogeneous computer networks 
CACM-2969

Multi-attribute Retrieval with Combined Indexes In this paper a file organization scheme designed to replace the use of the popular SECONDARY INDEX filing scheme (or inverted files on SECONDARY key fields) is describedThrough the use of redundancy and storing  keys (or access numbers of the records) that satisfy different combinations of SECONDARY INDEX values in "buckets," it is possible to retrieve all keys satisfying any input query derived from a subset of fields by a single access to an INDEX file, although each bucket may be used for many combinations of values and a combination of buckets may be required for a given query 
CACM-1976

Pagination of B*-Trees with Variable-Length Records A strategy is presented for pagination of B*-trees with variable-length recordsIf records  of each length are uniformly DISTRIBUTED within the file, and if a wide distribution of record lengths  exists within the file, then this strategy results in shallow trees with fast access times 
CACM-2926

A Record and File Partitioning ModelThis paper presents a model in which several  requests access the file system, and each  request requires INFORMATION from one or more variable length data-itemsOne of the subrecords is designated as the primary record; when  a request for a record is made, the primary record is first accessed, and other subrecords are accessed  only if the pertinent INFORMATION is not stored in the primary record 
CACM-3002

Analysis and PERFORMANCE of Inverted Data Base StructuresThe formulations presented are necessary to be used in conjunction with any INDEX SELECTION  criteria to determine the optimum set of INDEX keysdata base architecture, inverted file organization, data base PERFORMANCE and measurement, SECONDARY  INDEX organization, INFORMATION storage and retrieval, query answering  3 
CACM-2765

A Formal SYSTEM for INFORMATION Retrieval from Files A generalized file structure is provided by which the concepts of keyword, index, record, file, directory, file structure, directory decoding, and record retrieval are defined and from which some of the frequently used file structures such as inverted files, index-sequential files, and multilist files are derivedTwo algorithms which retrieve records from the generalized file  structure are presented 
CACM-2114

General PERFORMANCE Analysis of Key-to-AddressTransformation Methods Using an Abstract File Concept This paper presents a new approach to the analysis of PERFORMANCE of the various key-to-address  transformation methodsIn this approach the keys in a file are assumed to have been selected from the  key space according to a certain probabilistic SELECTION algorithm 
CACM-2437

Theoretical Considerations in INFORMATION Retrieval SystemsFor searching  strategy, a linear model for an evaluation function of relevancy is developed which rewards the SYSTEM  for retrieving relevant documents and not retrieving the nonrelevant, and penalizes the SYSTEM for the  escaped relevant documents and false drops INFORMATION storage and retrieval systems are composed of three major components: (a) identification  of INFORMATION and tagging it for effective retrieval, (b) searching strategy, how to enter the file  to circumvent the scanning of nonrelevant material, and (c) file organization to make access to INFORMATION  efficient 
CACM-1032

QUERY:
The application of fuzzy subset theory to clustering and information retrieval problems. This includes performance evaluation and automatic indexing considerations. 

SNIPPETS:

A Vector Space Model for AUTOMATIC Indexingautomatic INFORMATION retrieval, AUTOMATIC indexing, content analysis, document space  3 In a document retrieval, or other pattern matching environment where stored entities (documents)  are compared with each other or with incoming patterns (search requests), it appears that the best INDEXING  (property) space is one where each entity lies as far away from the others as possible; in these circumstances  the value of an INDEXING system may be expressible as a function of the density of the object space;  in particular, RETRIEVAL PERFORMANCE may correlate inversely with space density 
CACM-2711

Effective INFORMATION RETRIEVAL Using Term Accuracy The PERFORMANCE of INFORMATION RETRIEVAL systems can be evaluated in a number of different  waysMuch of the published EVALUATION work is based on measuring the RETRIEVAL PERFORMANCE of an average  user query 
CACM-2990

Theoretical CONSIDERATIONS in INFORMATION RETRIEVAL Systems INFORMATION storage and RETRIEVAL systems are composed of three major components: (a) identification  of INFORMATION and tagging it for effective retrieval, (b) searching strategy, how to enter the file  to circumvent the scanning of nonrelevant material, and (c) file organization to make access to INFORMATION  efficientFor identification of INFORMATION the paper suggests that a metalanguage (recently discussed  in a paper by Goffman, Verhoeff and Belzer) associated with an object language be used 
CACM-1032

AUTOMATIC Abstracting and INDEXING Survey and RecommendationsThe relative-frequency approach is discussed in detail, as is its APPLICATION to PROBLEMS of AUTOMATIC  INDEXING and AUTOMATIC abstractingConclusions are that point toward more sophisticated mathematical  and linguistic techniques for the solution of PROBLEMS of AUTOMATIC analysis 
CACM-0329

Data Manipulation and Programming Problemsin AUTOMATIC INFORMATION RetrievalThe main data  manipulations to be performed in AUTOMATIC INFORMATION systems are first briefly reviewed AUTOMATIC INFORMATION RETRIEVAL programs require the manipulation of a variety of different  data structures, including linear text, sparse matrices, and tree or list structures 
CACM-1457

An Information-Theoretic Approach toText Searching in Direct Access SystemsThe members  of this SUBSET are then used as index keys for RETRIEVAL Using direct access computer files of bibliographic information, an attempt is made to overcome  one of the PROBLEMS often associated with INFORMATION retrieval, namely, the maintenance and use of large  dictionaries, the greater part of which is used only infrequently 
CACM-2631

Dynamic Document ProcessingThe proposed procedures provide powerful tools for INFORMATION RETRIEVAL and for the control  of dynamic library collections in which new items are continually added and old ones are retiredA new dynamic document environment is then outlined in which clustered files are searched and INFORMATION is retrieved following an interactive user-controlled search process 
CACM-2307

A Software Design and EVALUATION SystemA system which integrates PERFORMANCE EVALUATION with design and implementation is described A critical failure of current software system design and implementation methodology is that  the PERFORMANCE of a proposed design is not evaluated before it is actually implemented 
CACM-2542

System PERFORMANCE Evaluation: Survey and Appraisal The state of the art of system PERFORMANCE EVALUATION is reviewed and EVALUATION goals and  PROBLEMS are examinedThroughput, turnaround, and availability are defined as fundamental measures  of performance; overhead and CPU speed are placed in perspective 
CACM-1653

The SMART AUTOMATIC Document RETRIEVAL System-An Illustration A fully AUTOMATIC document RETRIEVAL system operating on the IBM 7094 is describedThis feature is used in the RETRIEVAL process by leaving the exact sequence of  operations initially unspecified, and adapting the search strategy to the needs of individual users 
CACM-1236

QUERY:
The use of Bayesian decision models to optimize information retrieval system performance. This includes stopping rules to determine when a user should cease scanning the output of a retrieval search. 

SNIPPETS:

Experimental Evaluation of InformationRetrieval Through a TeletypewriterThe basic assumption  of the research is that an INFORMATION RETRIEVAL SYSTEM that provides for man-machine dialogue at a remote  inquiry terminal should provide a searcher with many of the tools which would be available to him were  he actually performing his SEARCH at a library or repository of documentsFactors involved in evaluation  of such a SYSTEM include ease of use, learning time, and effectiveness of actual RETRIEVAL 
CACM-1699

On Foster's INFORMATION Storage and RETRIEVAL Using AVL Treesbinary trees, SEARCH trees, INFORMATION storage, INFORMATION RETRIEVAL  3 CACM September, 1972  Tan, K 
CACM-2278

File Organization: The Consecutive RETRIEVAL PropertyIts existence enables the design of an INFORMATION RETRIEVAL SYSTEM with a minimal SEARCH time  and no redundant storageAn outline for designing an INFORMATION RETRIEVAL SYSTEM based on the consecutive  RETRIEVAL property is also discussed 
CACM-2288

The Use of an Interactive INFORMATION Storageand RETRIEVAL SYSTEM in Medical Researchimplementation, SYSTEM use, INFORMATION storage and RETRIEVAL SYSTEM  2 This paper presents the results of a study of the use of an interactive computerized storage  and RETRIEVAL SYSTEM 
CACM-3012

Effective INFORMATION RETRIEVAL Using Term Accuracy The PERFORMANCE of INFORMATION RETRIEVAL systems can be evaluated in a number of different  waysMuch of the published evaluation work is based on measuring the RETRIEVAL PERFORMANCE of an average  USER query 
CACM-2990

Dynamic Storage Allocation for an INFORMATION RETRIEVAL SYSTEM CACM October, 1961  Sams, BH 
CACM-0275

Approximating Block Accesses in Database Organizations CACM April, 1977  Yao, SB 
CACM-2976

Theoretical Considerations in INFORMATION RETRIEVAL SystemsFor searching  strategy, a linear model for an evaluation function of relevancy is developed which rewards the SYSTEM  for retrieving relevant documents and not retrieving the nonrelevant, and penalizes the SYSTEM for the  escaped relevant documents and false drops INFORMATION storage and RETRIEVAL systems are composed of three major components: (a) identification  of INFORMATION and tagging it for effective retrieval, (b) searching strategy, how to enter the file  to circumvent the SCANNING of nonrelevant material, and (c) file organization to make access to INFORMATION  efficient 
CACM-1032

Hierarchical Storage in INFORMATION RETRIEVAL A probabilistic analysis is employed to DETERMINE the effect of hierarchical storage organizations  on INFORMATION RETRIEVAL operationsA SYSTEM might, for example, consist of fast semiconductor memory, computer core memory, extended core  storage, disk memory, and data cells 
CACM-2516

The SMART Automatic Document RETRIEVAL System-An Illustration A fully automatic document RETRIEVAL SYSTEM operating on the IBM 7094 is describedThe SYSTEM  is characterized by the fact that several hundred different methods are available to analyze documents  and SEARCH requests 
CACM-1236

QUERY:
The use of computer science principles (e.g. data structures, numerical methods) in generating optimization (e.g. linear programming) algorithms. This includes issues of the Khachian (Russian, ellipsoidal) algorithm and complexity of such algorithms. 

SNIPPETS:

Minit ALGORITHM for LINEAR PROGRAMMING (Algorithm 333 [H])linear programming, dual simplex method, primal problem, dual problem  5 CACM July, 1969  Messham, D 
CACM-1863

Minit ALGORITHM For LINEAR PROGRAMMING (Algorithm 222 [H])linear programming, dual simplex method, primal problem, dual problem  5 CACM January, 1971  Kolm, A 
CACM-2223

Minit ALGORITHM for LINEAR PROGRAMMING (Algorithm 333 [H])linear programming, dual simplex method, primal problem, dual problem  5 CACM June, 1968  Salazar, R 
CACM-1729

Matrix Scaling by Integer PROGRAMMING (Algorithm 348 [F1]) CACM April, 1969  Klimpel, RR 
CACM-1914

Discrete LINEAR L1 Approximation by intervalLinear PROGRAMMING [E2] (Algorithm A458) CACM October, 1973  Robers, PD 
CACM-2431

LINEAR Equation Solver [F4] (Algorithm A423)matrix algorithms, LINEAR equations, Fortran, paged memory, virtual memory, array processing  4 CACM April, 1972  Moler, C 
CACM-2362

Minit ALGORITHM for LINEAR PROGRAMMING (Algorithm R333) CACM May, 1973  Obradovic, D 
CACM-2509

Minit ALGORITHM for LINEAR PROGRAMMING (Algorithm R333) CACM May, 1973  Holmgren, BObradovic, D 
CACM-2510

Transportation Problem (Algorithm 293 [H]) CACM April, 1968  Bayer, Gtransportation problem, LINEAR PROGRAMMING  5 
CACM-1759

Gomory (Algorithm 263A $H)) CACM May, 1970  Proll, LG 
CACM-2056

QUERY:
The role of information retrieval in knowledge based systems (i.e., expert systems). 

SNIPPETS:

Effective INFORMATION RETRIEVAL Using Term Accuracy The performance of INFORMATION RETRIEVAL SYSTEMS can be evaluated in a number of different  waysMuch of the published evaluation work is BASED on measuring the RETRIEVAL performance of an average  user query 
CACM-2990

The Use of an Interactive INFORMATION Storageand RETRIEVAL System in Medical Researchimplementation, system use, INFORMATION storage and RETRIEVAL system  2 This paper presents the results of a study of the use of an interactive computerized storage  and RETRIEVAL system 
CACM-3012

A Stochastic Evaluation Model for DatabaseOrganization in Data RETRIEVAL SYSTEMS Experimental work in the valuation of large scale data RETRIEVAL SYSTEMS has been scarce due  to its difficulty and prohibitive costThis paper discusses a simulation model of a data RETRIEVAL  system which has the effect of significantly reducing the cost of experimentation and enabling research  never attempted before 
CACM-2882

Theoretical Considerations in INFORMATION RETRIEVAL SYSTEMS INFORMATION storage and RETRIEVAL SYSTEMS are composed of three major components: (a) identification  of INFORMATION and tagging it for effective retrieval, (b) searching strategy, how to enter the file  to circumvent the scanning of nonrelevant material, and (c) file organization to make access to INFORMATION  efficientFor identification of INFORMATION the paper suggests that a metalanguage (recently discussed  in a paper by Goffman, Verhoeff and Belzer) associated with an object language be used 
CACM-1032

The Use of Normal Multiplication Tablesfor INFORMATION Storage and RetrievalFor a certain class of INFORMATION systems, the normal multiplication table method yields far more rapid RETRIEVAL with a more economical space requirement than conventional SYSTEMS This paper describes a method for the organization and RETRIEVAL of attribute  BASED INFORMATION systems, using the normal multiplication table as a directory for the INFORMATION system 
CACM-3134

Experimental Evaluation of InformationRetrieval Through a Teletypewriter Experiments designed to evaluate the capabilities of mechanized INFORMATION RETRIEVAL systems,  with emphasis on interactive (man-machine) language and on some of the mechanical and psychological limitations  in their design, were conducted at the Moore School INFORMATION SYSTEMS LaboratoryThe basic assumption  of the research is that an INFORMATION RETRIEVAL system that provides for man-machine dialogue at a remote  inquiry terminal should provide a searcher with many of the tools which would be available to him were  he actually performing his search at a library or repository of documents 
CACM-1699

On the Expected Gain From Adjust ing Matched Term RETRIEVAL SYSTEMS A file adjustment procedure BASED on maximizing the Bayes expected gain proposed for matched  term RETRIEVAL systemsAn example evaluates the gain parameters for a typical  INFORMATION RETRIEVAL system 
CACM-1514

Data Manipulation and Programming Problemsin Automatic INFORMATION RETRIEVAL Automatic INFORMATION RETRIEVAL programs require the manipulation of a variety of different  data structures, including linear text, sparse matrices, and tree or list structuresThe main data  manipulations to be performed in automatic INFORMATION SYSTEMS are first briefly reviewed 
CACM-1457

Easy English,a Language for InformationRetrieval Through a Remote Typewriter Console Easy English is a natural command language designed to simplify communication between man and  machine through remote typewriter consoleIt has been developed for RETRIEVAL of documents from a computerized  data base, the Moore School INFORMATION SYSTEMS Laboratory files 
CACM-1681

Introduction to "Feature Analysis ofGeneralized Data Base Management Systems" This paper is a separately published introduction to a main report which analyzes the features  of generalized data base management systemsThis introduction gives a review of the current state of  the art in these SYSTEMS and discusses the differences and similarities between capabilities found in  host language SYSTEMS and those found in self-contained SYSTEMS 
CACM-2198

QUERY:
Parallel processors in information retrieval 

SNIPPETS:

Merging with PARALLEL PROCESSORS Consider two linearly ordered sets A, B, |A|=m, |B|=n, m<=n, and p, p<=m, PARALLEL PROCESSORS  working synchronouslyThe paper presents an algorithm for merging A and B with the p PARALLEL processors,  which requires at most 2[log2 (2m+1)]+[3m/p] + [m/p][log2 (n/m)] steps 
CACM-2714

Computing Connected Components on PARALLEL Computers We present a PARALLEL algorithm which uses n2 PROCESSORS to find the connected components of an undirected graph with n vertices in time O(log2n)An O(log2n) time bound also can be achieved using only n$n/$log2n)) PROCESSORS 
CACM-3156

Fast PARALLEL Sorting Algorithms A PARALLEL bucket-sort algorithm is presented that requires time O(log n) and the use of n  processorsThe algorithm makes use of a technique that requires more space than the product of PROCESSORS  and time 
CACM-3075

A Case Study in Programming for Parallel-Processors An affirmative partial answer is provided to the question of whether it is possible to program  parallel-processor computing systems to efficiently decrease execution time for useful problemsParallel-processor  systems are multiprocessor systems in which several of the PROCESSORS can simultaneously execute separate  tasks of a single job, thus cooperating to decrease the solution time of a computational problem 
CACM-1811

A Formal System for INFORMATION RETRIEVAL from Files A generalized file structure is provided by which the concepts of keyword, index, record, file, directory, file structure, directory decoding, and record RETRIEVAL are defined and from which some of the frequently used file structures such as inverted files, index-sequential files, and multilist files are derivedTwo algorithms which retrieve records from the generalized file  structure are presented 
CACM-2114

Everyman's INFORMATION RETRIEVAL System The INFORMATION RETRIEVAL problem whose solution is presented here was posed by a technical  library with limited bubget and personnelThe solution, however, is quite general and is applicable  to many different types of RETRIEVAL problems 
CACM-0891

File Organization: The Consecutive RETRIEVAL PropertyIts existence enables the design of an INFORMATION RETRIEVAL system with a minimal search time  and no redundant storageAn outline for designing an INFORMATION RETRIEVAL system based on the consecutive  RETRIEVAL property is also discussed 
CACM-2288

Data Manipulation and Programming Problemsin Automatic INFORMATION RETRIEVAL Automatic INFORMATION RETRIEVAL programs require the manipulation of a variety of different  data structures, including linear text, sparse matrices, and tree or list structuresThe main data  manipulations to be performed in automatic INFORMATION systems are first briefly reviewed 
CACM-1457

Experimental Evaluation of InformationRetrieval Through a Teletypewriter Experiments designed to evaluate the capabilities of mechanized INFORMATION RETRIEVAL systems,  with emphasis on interactive (man-machine) language and on some of the mechanical and psychological limitations  in their design, were conducted at the Moore School INFORMATION Systems LaboratoryThe basic assumption  of the research is that an INFORMATION RETRIEVAL system that provides for man-machine dialogue at a remote  inquiry terminal should provide a searcher with many of the tools which would be available to him were  he actually performing his search at a library or repository of documents 
CACM-1699

A General-Purpose Display Processing and Tutorial SystemThis system was designed  to improve man-computer communications by employing a display unit to interleave tutoring with other  computer operations such as simulation, programming, and INFORMATION retrievalcomputer-assisted instruction, tutorial systems, programming, simulation, modeling, INFORMATION  RETRIEVAL operating systems, graphics, displays, man-machine interface, on-line computing, graphic programming  1 
CACM-1680

QUERY:
Parallel processors and paging algorithms 

SNIPPETS:

Fast PARALLEL Sorting ALGORITHMS A PARALLEL bucket-sort algorithm is presented that requires time O(log n) and the use of n  processorsThe algorithm makes use of a technique that requires more space than the product of PROCESSORS  and time 
CACM-3075

Computing Connected Components on PARALLEL Computers We present a PARALLEL algorithm which uses n2 PROCESSORS to find the connected components of an undirected graph with n vertices in time O(log2n)An O(log2n) time bound also can be achieved using only n$n/$log2n)) PROCESSORS 
CACM-3156

Merging with PARALLEL PROCESSORS Consider two linearly ordered sets A, B, |A|=m, |B|=n, m<=n, and p, p<=m, PARALLEL PROCESSORS  working synchronouslyThe paper presents an algorithm for merging A and B with the p PARALLEL processors,  which requires at most 2[log2 (2m+1)]+[3m/p] + [m/p][log2 (n/m)] steps 
CACM-2714

A Comparison of List Schedules for PARALLEL Processing Systemsparallel processing, precedence graphs, scheduling, list scheduling, optimization, dynamic programming  4 The problem of scheduling two or more PROCESSORS to minimize the execution time of a program  which consists of a set of partially ordered tasks is studied 
CACM-2570

A Case Study in Programming for Parallel-Processors An affirmative partial answer is provided to the question of whether it is possible to program  parallel-processor computing systems to efficiently decrease execution time for useful problemsParallel-processor  systems are multiprocessor systems in which several of the PROCESSORS can simultaneously execute separate  tasks of a single job, thus cooperating to decrease the solution time of a computational problem 
CACM-1811

Sorting on a Mesh-Connected PARALLEL Computer Two ALGORITHMS are presented for sorting n^2 elements on an n X n mesh-connected processor  array that require O(n) routing and comparison stepsThe ALGORITHMS of this paper are shown to be optimal in time within small constant factors 
CACM-2973

Anomalies with Variable Partition PAGING ALGORITHMS Five types of anomalous behavior which may occur in paged virtual memory operating systems  a redefinedOne type of anomaly, for example, concerns the fact that, with certain reference strings  and PAGING algorithms, an increase in mean memory allocation may result in an increase in fault rate 
CACM-3006

A Highly PARALLEL Algorithm for ApproximatingAll Zeros of a Polynomial with Only Real ZerosThe algorithm, which is conceptually suitable for PARALLEL computation,  determines its own starting values so that convergence to the zeros is guaranteedparallel numerical algorithms, real polynomials, real zeros, Newton's method, starting values,  guaranteed convergence  5 
CACM-2266

Synchronizing PROCESSORS with Memory-Content-Generated Interrupts Implementations of the "Lock-Unlock" method of synchronizing PROCESSORS in a multiprocessor  system usually require uninterruptable, memory-pause type instructionsThe read-interlock method does require a special"read-interlock" instruction  in the repertoire of the PROCESSORS and a special "read-interlock" cycle in the repertoire of the memory  modules 
CACM-2497

Resource Management for a Medium Scale Time-Sharing Operating systemA synopsis is given  of the task scheduling and PAGING ALGORITHMS that were implemented, and the results of comparative simulation  are given by tracing the development of the ALGORITHMS through six predecessor versions Task scheduling and resource balancing for a medium size virtual memory PAGING machine are  discussed in relation to a combined batch processing and time-sharing environment 
CACM-1752

QUERY:
Modelling and simulation in agricultural ecosystems. 

SNIPPETS:

The Digital SIMULATION of River Plankton Population Dynamics This paper deals with the development of a mathematical model for and the digital SIMULATION  in Fortran IV of phytoplankton and zooplankton population densities in a river using previously developed  rate expressionsIn order to study the relationships between the ecological mechanisms involved, the  SIMULATION parameters were varied illustrating the response of the ecosystem to different conditions,  including those corresponding to certain types of chemical and thermal pollution 
CACM-2721

Significant Event SIMULATION This paper compares a new method of SIMULATION organization, called the significant event method,  with an old one, called the clock pulse method, using as examples two automobile traffic modelsThe  significant event method is found to be more efficient than the clock pulse method at low levels of system  interaction and less efficient at high levels 
CACM-2749

Exclusive SIMULATION of Activity in Digital Networks A technique for simulating the detailed logic networks of large and active digital systems  is describedEssential objectives sought are improved ease and economy in model generation, economy  in execution time and space, and a facility for handling simultaneous activities 
CACM-1928

A Comparison of SIMULATION Event List Algorithms Four algorithms are considered which can be used to schedule events in a general purpose discrete  SIMULATION systemTwo of the algorithms are new, one is based on an end-order tree structure for event  notices, and another uses an indexed linear list 
CACM-2767

Hybrid SIMULATION Models of Computer Systems This paper describes the structure and operation of a hybrid SIMULATION model in which both  discrete-event SIMULATION and analytic techniques are combined to produce efficient yet accurate system  modelsIn an example based on a simple hypothetical computer system, discrete-event SIMULATION is used  to model the arrival and activation of jobs, and a central-server queueing network models the use of  system processors 
CACM-3070

Some Techniques for Using Pseudorandom Numbers in Computer SimulationTechniques for making use of such "numbers" in SIMULATION programming are described An algorithm is described by which uniform pseudorandom integers may be used to construct binary  "numbers" in which the probability that each bit in the word is a 1-bit and can assume any desired parameter  value 
CACM-1870

SIMULATION of Traffic Flows in a Network A computer SIMULATION program which deals with traffic flows in the network of a large area  is describedEach road is segmented into blocks of several ten-meter lengths and is represented by  a bidirectional list in computer memory 
CACM-1890

Performance Evaluation of Highly ConcurrentComputers by Deterministic SIMULATION SIMULATION is presented as a practical technique for performance evaluation of alternative  configurations of highly concurrent computersA technique is described for constructing a detailed  deterministic SIMULATION model of a system 
CACM-3048

Improved Event-Scanning Mechanisms for Discrete Event SIMULATION SIMULATION models of large, complex "real-world" applications have occasionally earned the  reputation of eating up hours of computer timeThis problem may be attributed in part to difficulties  such as slow stochastic convergence 
CACM-2742

Achieving Specific Accuracy in SIMULATION Output Analysis This paper extends the use of the regenerative property of queueing systems in the analysis  of SIMULATION outputIn particular, it describes a sequential estimation method which when used with  the regenerative property allows results to be obtained with specified statistical accuracy 
CACM-2970

QUERY:
mathematical induction, group theory, integers modulo m, probability, binomial coefficients, binomial theorem, homomorphism, morphism, transitivity, relations, relation matrix. Syracuse University, 313 Link Hall, Syracuse, N. 13210 

SNIPPETS:

BINOMIAL COEFFICIENTS (Algorithm 19) CACM August, 1962  George, R 
CACM-0514

BINOMIAL COEFFICIENTS (Algorithm 19) CACM June, 1962  Steck, B 
CACM-0569

BINOMIAL COEFFICIENTS (Algorithm 19) CACM October, 1960  Kenyon, RR 
CACM-0139

Recursive Solution of a Class Of Combinatorial Problems: An Example Combinatorial problems requiring the selection of n elements from a set of m elements may be  solved by a recursion process analogous to that for computing BINOMIAL coefficientsSeveral specific  problems are analyzed, the general technique is exposed, and an ALGOL program is developed for one of  the problems 
CACM-1186

Unitary Symmetric Polynomials [Z] (Algorithm R391) CACM January, 1972  Schrack, GF 
CACM-2391

Construction of Rational and Negative Powers of a Formal SeriesThere are basically two approaches: the BINOMIAL THEOREM and the iteration  methodsseries expansion, series inversion, root extraction, BINOMIAL theorem, Newton iterations, Chebyshev  series, Poisson series, Fourier series  3 
CACM-2229

Toward Automatic Program Synthesisartificial intelligence, answer extraction, automatic program synthesis, MATHEMATICAL INDUCTION  principle, problem solving, THEOREM proving  3It is emphasized  that in order to construct a program with loops or with recursion, the principle of MATHEMATICAL INDUCTION  must be applied 
CACM-2210

Algorithm and Bound for the Greatest Common Divisor of n INTEGERS A new version of the Euclidean algorithm for finding the greatest common divisor of n INTEGERS a(i) and multipliers x(i) such that gcd = x(1)a(1) + 
CACM-2031

Recent Improvements in MADCAP MADCAP is a programming language admitting subscripts, superscripts and certain forms of displayed  formulasThe basic implementation of this language was described in a previous paper [MADCAP: A scientific  compiler for a displayed formula textbook language, Comm 
CACM-0679

Operations on Sparse Relationscomputational complexity, sparse relation, Boolean matrix, directed graph, Wirth-Weber precedence  relation, linear precedence function, SLR grammar, T-canonical precedence RELATION  4 Various computations on relations, Boolean matrices, or directed graphs, such as the computation  of precedence RELATIONS for a context-free grammar, can be done by a practical algorithm that is asymptotically  faster than those in common use 
CACM-2986

QUERY:
Semantics of programming languages, including abstract specifications of data types, denotational semantics, and proofs of correctness. Hoare, A. Dijkstra, E. University of Massachusetts, Amherst, MA 01003 

SNIPPETS:

Comment on the Composition of SEMANTICS in Algol 68programming primitives, PROGRAMMING languages, Algol, semantics, recursive composition, design  of PROGRAMMING languages, DATA structures  1 CACM August, 1972  van der Poel, W 
CACM-2295

Another Recursion Induction PrincipleIt  is shown to be useful for proving partial functions equivalent and thus applicable in PROOFS about interpreters  for PROGRAMMING languagesrecursion, induction, correctness, proofs, compiler CORRECTNESS  4 
CACM-2192

Fen-An Axiomatic Basis for Program SemanticsIt is also demonstrated  that completely new primitive TYPES can be introduced into LANGUAGES through the mechanism of singleton  DATA TYPES A formal system is presented which abstracts the notions of DATA item, function, and relation 
CACM-2470

Tree-Structured Programscontrol structures, flowcharts, goto statements, inductive assertion, least fix points, optimization  in compilers, program documentation, program flow graphs, PROGRAMMING language design, proof of programs,  SEMANTICS of PROGRAMMING languages, structured PROGRAMMING CACM November, 1973  Wegner, E 
CACM-2411

Guarded Commands, Nondeterminacy and Formal Derivation of Programsprogramming languages, sequencing primitives, program semantics, PROGRAMMING language semantics,  nondeterminacy, case-construction, repetition, termination, CORRECTNESS proof, derivation of programs,  PROGRAMMING methodology  4 So-called "guarded commands" are introduced as a building block for alternative and repetitive  constructs that allow nondeterministic program components for which at least the activity evoked, but  possible even the final state, is not necessarily uniquely determined by the initial state 
CACM-2732

Derived SEMANTICS for Some PROGRAMMING Language Constructslambda calculus, formal description, program correctness, PROGRAMMING languages, SEMANTICS  4 The constructs of a simple PROGRAMMING language are introduced and described informally in  terms of values and side-effects 
CACM-2264

Abstraction and Verification in Alphard: Definingand Specifying Iteration and Generatorsabstraction and representation, ABSTRACT DATA types, assertions, control specialization, correctness,  generators,invariants, iteration statements, modular decomposition, program specifications, PROGRAMMING  languages, PROGRAMMING methodology, PROOFS of correctness, types, verification  4 The Alphard "form" provides the programmer with a great deal of control over the implementation  of ABSTRACT DATA TYPES 
CACM-2940

The Intrinsically Exponential Complexity ofthe Circularity Problem for Attribute Grammars Attribute grammars are an extension of context-free grammars devised by Knuth as a mechanism  for INCLUDING the SEMANTICS of a context-free language with the syntax of the languageThe circularity  problem for a grammar is to determine whether the SEMANTICS for all possible sentences (programs) in  fact will be well defined 
CACM-2703

The Composition of SEMANTICS in Algol 68programming primitives, PROGRAMMING languages, Algol, semantics, recursive composition, design  of PROGRAMMING languages, DATA structures  1 The main features of Algol 68 are explained from a semantic point of view 
CACM-2148

Fix point Approach to the Theory of Computation  Following the fix point theory of Scott, the SEMANTICS of computer programs are defined in terms  of the least fix points of recursive programsverification techniques, SEMANTICS of PROGRAMMING languages, least fix points, recursive programs,  computational induction  5 
CACM-2326

QUERY:
Anything dealing with star height of regular languages or regular expressions or regular events. 

SNIPPETS:

REGULAR Coulomb Wave Functions (Algorithm 292 [S22])Coulomb wave functions, wave functions, REGULAR Coulomb wave functions  5 CACM May, 1969  Kolbig, K 
CACM-1898

REGULAR Coulomb Wave Functions (Algorithm 292 S22])Coulomb wave functions, wave functions, REGULAR Coulomb wave functions  5 CACM May, 1969  Gautschi, W 
CACM-1896

REGULAR Coulomb Wave Functions (Algorithm 292 $S22))Coulomb wave functions, wave functions, REGULAR Coulomb wave functions  5 CACM September, 1970   Cody, W 
CACM-1993

REGULAR Expression Search Algorithm A method for locating specific character strings embedded in character text is described and  an implementation of this method in the form of a compiler is discussedThe compiler accepts a REGULAR  expression as source language and produces an IBM 7094 program as object language 
CACM-1739

Order-n Correction for REGULAR LANGUAGES A method is presented for calculating a string B, belonging to a given REGULAR language L,  which is "nearest" (in number of edit operations) to a given input string aB is viewed as a reasonable  "correction" for the possibly erroneous string a, where a was originally intended to be a string of L 
CACM-2650

REGULAR Right Part Grammars and Their ParsersRRP grammars describe the syntax of programming LANGUAGES more  concisely and more understandably than is possible with CF grammars This paper in troduces an alternative to context-free grammars called REGULAR right part (RRP)  grammars, which resemble PASCAL syntax diagrams 
CACM-2921

REGULAR Coulomb Wave Functions (Algorithm 292 ) CACM November, 1966  Gautschi, W 
CACM-1355

A PL/I Program to Assist the Comparative Linguist A practical PL/I program is described which can assist comparative linguists to determine the REGULAR sound correspondences between genetically related languagescomparative linguistics, natural language processing, comparative method, historical linguistics, diachronic linguistics, genetic relationship, sound change, sound correspondence, REGULAR correspondence, list processing  3 
CACM-2051

Automatic Generation of Efficient LexicalProcessors Using Finite State TechniquesThis system accepts as input description of the multicharacter  items or of words allowable in a language given in terms of a subset of REGULAR expressionsThe output  of the system is a lexical processor which reads a string of characters and combines them into the items  as defined by the REGULAR EXPRESSIONS 
CACM-1665

Translation Equations Input limited transduction expressions, or translation equations, are used to describe the syntax and left-context sensitive semantics for  context-free languagesA formal procedure is given for deriving from a set of translation equations the specifications for a pushdown translator 
CACM-2112

QUERY:
Articles relation the algebraic theory of semigroups and monoids to the study of automata and regular languages. 

SNIPPETS:

Toward an AUTOMATA THEORY of Brains A source of ideas for AUTOMATA theory-the STUDY of the brain-has been pushed aside in mathematical  development of the theoryThis paper suggests the ways in which AUTOMATA THEORY might evolve over the  next 25 years if it is to contribute to an understanding of how the brain processes information 
CACM-2327

Order-n Correction for REGULAR Languageserror correction, REGULAR languages, REGULAR events, finite state automata, compiler error recovery,  spelling correction, string best match problem, correction, corrector, errors, nondeterministic finite-state  AUTOMATA  4 A method is presented for calculating a string B, belonging to a given REGULAR language L,  which is "nearest" (in number of edit operations) to a given input string a 
CACM-2650

Automata, Formal Languages, Abstract Switching,and Computability in a Ph. Computer Science Programcomputer science program, automata, formal languages,  switching theory, THEORY of computability  1 A number of courses are listed in the area describe as automata, formal languages, abstract  switching, and computability, that might be available to a Ph 
CACM-1678

Translation Equations Input limited transduction expressions, or translation equations, are used to describe the syntax and left-context sensitive semantics for  context-free languagesThe translator consists of Mealy form finite-state AUTOMATA interacting by means of a pushdown stack 
CACM-2112

REGULAR Right Part Grammars and Their ParsersRRP grammars describe the syntax of programming LANGUAGES more  concisely and more understandably than is possible with CF grammars This paper in troduces an alternative to context-free grammars called REGULAR right part (RRP)  grammars, which resemble PASCAL syntax diagrams 
CACM-2921

REGULAR Coulomb Wave Functions (Algorithm 292 [S22])Coulomb wave functions, wave functions, REGULAR Coulomb wave functions  5 CACM May, 1969  Kolbig, K 
CACM-1898

REGULAR Coulomb Wave Functions (Algorithm 292 S22])Coulomb wave functions, wave functions, REGULAR Coulomb wave functions  5 CACM May, 1969  Gautschi, W 
CACM-1896

REGULAR Coulomb Wave Functions (Algorithm 292 $S22))Coulomb wave functions, wave functions, REGULAR Coulomb wave functions  5 CACM September, 1970   Cody, W 
CACM-1993

Logic and Programming LanguagesProgramming LANGUAGES offer  an obvious opportunity as their syntactic formalization is well advanced; however, the semantical THEORY  can hardly be said to be completeSo far the theories of AUTOMATA and of nets, though most in teresting for dynamics, have formalized only  a portion of the field, and there has been perhaps too much concentration on the finite-state and ALGEBRAIC  aspects 
CACM-2931

REGULAR Coulomb Wave Functions (Algorithm 292 ) CACM November, 1966  Gautschi, W 
CACM-1355

QUERY:
Abstracts of articles: J. Backus, "Can programming be liberated from the Von Neumann style? A functional style and its algebra of programs", CACM 21 Re Millo, R. Lipton, A. Perlis, letter to ACM Forum, CACM 22 (1979), 629-630 Backus, J. De Millo, R. Lipton, R. Perlis, A. 

SNIPPETS:

Can PROGRAMMING Be LIBERATED from the VON NeumannStyle?  A FUNCTIONAL STYLE and Its ALGEBRA of PROGRAMS Conventional PROGRAMMING languages are growing ever more enormous, but not strongerInherent  defects at the most basic level cause them to be both fat and weak: their primitive word-at-a-time STYLE  of PROGRAMMING inherited from their common ancestor-the VON NEUMANN computer, their close coupling off  semantics to state transitions, their division of PROGRAMMING into a world of expressions and a world  of statements, their inability to effectively use powerful combining forms for building new PROGRAMS  from existing ones, and their lack of useful mathematical properties for reasoning about PROGRAMS 
CACM-3077

Social Processes and Proofs of Theorems and ProgramsFurthermore the absence of continuity, the inevitability of change, and the complexity of specification of significantly many real PROGRAMS make the form al verification process difficult to justify and manageCACM May, 1979  DE Millo, R 
CACM-3140

A Set of Basic Input-Output Procedures (Algorithm 335 [15])The Berkeley STYLE of providing information on the form of output  using prior calls of procedures such as real format is defined By means of the primitives in symbol, outsymbol and length, as requested by this journal's  Algorithms Policy [Comm 
CACM-1705

PROGRAMMING Languages, Natural Languages, and Mathematicsprograms) of general utility and studies of questions  related to program STYLE Some social aspects of PROGRAMMING are illuminated through analogies with similar aspects of  mathematics and natural languages 
CACM-2705

Symbolic Execution and Program Testing This paper describes the symbolic execution of programsIt interpretively executes PROGRAMS written in a simple PL/I STYLE PROGRAMMING language 
CACM-2850

Reduction: A Method of Proving Properties of Parallel PROGRAMS When proving that a parallel program has a given property it is often convenient to assume  that a statement is indivisible, ie 
CACM-2700

Two-Level Control Structure for Nondeterministic PROGRAMMING The basic ideas of nondeterministic PROGRAMMING are critically reconsidered to single out a  proper attitude and PROGRAMMING STYLE for language allowing direct control of nondeterministic featuresThe proposed attitude aims at retaining the purity of the nondeterministic formulation of search processes  on one level (the attempt level), deferring the coordination of problem solving efforts to another (the  choice level) 
CACM-2922

A Policy-Driven Scheduler for a Time-Sharing System The service received by a process from a time-sharing operating system can be characterized  by a resource count SUM{w[i]R[ij]} where R[ij] is the number of units of service received by process  i from resource i and w[i] is the cost per unit of the serviceEach class of users can be characterized  by a policy function which specifies the amount of service a user who belongs to this class should receive  as a function of time 
CACM-2219

Panel Discussion on Computer Appreciation Session 19 of the ACM 20 th Anniversary Conference on August 31, 1967, was entitled Education,  Design Experiments, and Computer AppreciationIts second half consisted of a panel discussion on computer  appreciation, organized and chaired by Elliot I 
CACM-1764

The Selection of Optimal Tab Settings A new generation of computer terminals allows tab settings to be selected and set by the computerThis feature can be used to reduce the number of characters that are needed to represent a document  for transmission and printing 
CACM-3036

QUERY:
Algorithms or statistical packages for ANOVA, regression using least squares or generalized linear models. System design, capabilities, statistical formula are of interest. Student's t test, Wilcoxon and sign tests, multivariate and univariate components can be included. 

SNIPPETS:

An Evaluation of STATISTICAL Software in the Social Sciences  Several hundred college and university computer installations now offer various types of STATISTICAL  PACKAGES for general useAmong those most widely available are OSIRIS, SPSS, BMD, DATA-TEXT, and TSAR 
CACM-2634

STATISTICAL Computations Based Upon Algebraically Specified MODELS Based upon a machine-readable STATISTICAL model and related symbolic specifications, an efficient  method of performing calculations for STATISTICAL MODELS of a balanced complete nature is presentedFixes, mixed, and random analysis of variance MODELS are considered 
CACM-1344

A Modification of Efroymson's Technique for Stepwise REGRESSION Analysismultiple LINEAR regression, STATISTICAL recurrence formulas, correlation, LINEAR STATISTICAL models,  STATISTICAL computer programs, curve fitting  4 The computational technique conventionally used for stepwise multiple LINEAR REGRESSION requires  the storage of an n X n matrix of data 
CACM-1709

Problems in the STATISTICAL Analysis of SimulationExperiments: The Comparison of Means and the Length of Sample Records Research is continued into STATISTICAL analysis of simulation experiments containing autocorrelated  time seriesThe results expand the possibilities of STATISTICAL spectral  analysis as applied to simulation experiments 
CACM-1637

The BMD and BMDP Series of STATISTICAL Computer Programs CACM October, 1976  Frane, JW 
CACM-2825

Generating Pseudorandom Numbers on a Two'sComplement Machine such as the IBM 360It is shown that a sequence of positive and negative residues  may be produced more simply and economically than with the conventional approach and yet have twice the  period of the latter without loss of desirable STATISTICAL propertiesAnother easily generated sequence  involving absolute values is also shown to have twice the period but with less attractive STATISTICAL  properties 
CACM-1874

A Comparison of the Primal-Simplex and Primal-DualAlgorithms for LINEAR Programming A STATISTICAL comparison of the primal-dual and the more commonly used primal-simplex algorithm  for solving LINEAR programming problems has been made under the assumption of starting with a full artificial  basisIt has also been found, via a REGRESSION analysis, that the relevant parameters  in determining the difference in the number of iterations between the ALGORITHMS is not only the number  of constraints and the number of variables but also the ratio of the latter to the former 
CACM-1171

TESTS of Probabilistic MODELS for Propagation of Roundoff Errors In any prolonged computation it is generally assumed that the accumulated effect of roundoff  errors is in some sense statisticalThe purpose of this paper is to give precise descriptions of certain  probabilistic MODELS for roundoff error, and then to describe a series of experiments for testing the  validity of these MODELS 
CACM-1474

STATISTICAL Programs for the IBM 650-Part I A collection is given of brief descriptions of STATISTICAL programs now in use in university  computing centers which have IBM 650'sCACM August, 1959  Hamblen, J 
CACM-0069

A New Uniform Pseudorandom Number Generator A new multiplicative congruential pseudorandom number generator is discussed, in which the  modulus is the largest prime within accumulator capacity and the multiplier is a primitive root of that  primeThis generator passes the usual STATISTICAL TESTS and in addition the least significant bits  appear to be as random as the most significant bits-a property which generators having modulus 2^k do  not possess 
CACM-1420

QUERY:
Dictionary construction and accessing methods for fast retrieval of words or lexical items or morphologically related information. Hashing or indexing methods are usually applied to English spelling or natural language problems. 

SNIPPETS:

Storage and RETRIEVAL of Aspects of Meaning in Directed Graph Structures An experimental system that uses LISP to make a conceptual DICTIONARY is describedThe DICTIONARY  associates with each ENGLISH word the syntactic information, definitional material, and references to  the contexts in which it has been used to define other WORDS 
CACM-1456

Do It by the Numbers-Digital ShorthandSince ENGLISH WORDS form only a sparse set of all possible alphabetic combinations,  present METHODS are inefficient when computer systems are substituted for these terminalsUsing numeric  representations of entire WORDS or common phrases (rather than character-by-character representations)  requires approximately one-third of present transmission time 
CACM-0144

PEEKABIT, Computer Offspring of PunchedCard PEEKABOO, for NATURAL LANGUAGE Searchingpeekaboo, superimposed coding, NATURAL LANGUAGE searching text searching, INFORMATION compaction,  computer search technique  3 The "peekaboo" idea from punched card INFORMATION RETRIEVAL METHODS has been mated with the  idea of superimposed punching to produce a programming technique which cuts computer run time in half  on a test search of 33,000 subject index entries 
CACM-1700

A Stochastic Approach to the Grammatical Coding of ENGLISH A computer program is described which will assign each word in an ENGLISH text to its form  class or part of speechThe program operates at relatively high speed in only a limited storage space 
CACM-1235

Spline Function METHODS for Nonlinear Boundary-Value ProblemsRequiring the differential  equation to be satisfied at the mesh points results in a set of difference equations, which are block  tridiagonal and so are easily solved by relaxation or other standard METHODS The solution of the nonlinear differential equation Y"=F(x,Y,Y') with two-point boundary conditions  is approximated by a quintic or cubic spline function y(x) 
CACM-1888

Perfect HASHING Functions: A SingleProbe Retrieving Method for Static SetsGiven a set I of identifiers, two METHODS are presented for building, in a mechanical  way, perfect HASHING functions, iSome METHODS to extend  these results to larger sets are also presented 
CACM-2905

Storage and Search Properties of a Tree-Organized Memory SystemSuch trees have INFORMATION storage and RETRIEVAL properties applicable to PROBLEMS involving  large quantities of data or to PROBLEMS where the quantity, word length and distribution of stored INFORMATION  is not known a priori, or changes rapidly during the processing A memory with list properties [1] may be used to construct numeric, alphabetic or alphanumeric  trees 
CACM-0944

A Note on INFORMATION Organization and Storage Since the logical structure of a data base can be represented by a tree or graph, it is quite  NATURAL for us to view the process of designing a data base as that of constructing a tree or a graphA general method for constructing such a tree or a graph is provided 
CACM-2484

Compressed Tries This paper presents a new data structure, called a compressed trie or C-trie, to be used in  INFORMATION RETRIEVAL systemsIt has the same underlying m-ary tree structure as a trie, where m is  a parameter of the trie, but whereas the fields of the nodes in a trie have to be large enough to hold  a key or at least a pointer, the fields in a C-trie are only one bit long 
CACM-2846

A Unifying Computational Method for theAnalysis of Complete Factorial Experiments A computational method which may be used for the calculation of sums of squares in the analysis  of variance of complete factorial experiments and in the computation of main effect or interaction means  is describedThe method is elucidated as unifying since one method can be used for a variety of purposes  each previously requiring different METHODS 
CACM-1650

QUERY:
Hardware and software relating to database management systems. Database packages, back end computers, special associative hardware with microcomputers attached to disk heads or things like RAP, relational or network (CODASYL) or hierarchical models, systems like SYSTEM R, IMS, ADABAS, TOTAL, etc. 

SNIPPETS:

An English Language Question Answering Systemfor a Large RELATIONAL DATABASE By typing requests in English, casual users will be able to obtain explicit answers from a  large RELATIONAL DATABASE of aircraft flight and maintenance data using a SYSTEM called PLANESThe  design and implementation of this SYSTEM is described and illustrated with detailed examples of the operation  of SYSTEM components and examples of overall SYSTEM operation 
CACM-3087

A Stochastic Evaluation Model for DatabaseOrganization in Data Retrieval SYSTEMS Experimental work in the valuation of large scale data retrieval SYSTEMS has been scarce due  to its difficulty and prohibitive costThis paper discusses a simulation model of a data retrieval  SYSTEM which has the effect of significantly reducing the cost of experimentation and enabling research  never attempted before 
CACM-2882

Intentional Resolution of Privacy Protection in DATABASE SYSTEMS Traditionally, privacy protection in DATABASE SYSTEMS is understood to be the control over  what information a given user can get from a databaseThis paper is concerned with another, independent,  dimension of privacy protection, the control over what a user is allowed to do with a piece of information  supplied to him by the DATABASE 
CACM-2876

Optimizing the Performance of a RELATIONAL Algebra DATABASE Interfacerelational database, DATABASE optimization, inverted file, automatic programming, query language,  data manipulation language, very high level language  3 An approach for implementing a "smart" interface to support a RELATIONAL view of data is proposed 
CACM-2716

Performance of Rollback Recovery SYSTEMS under Intermittent Failures A mathematical model of a transaction-oriented SYSTEM under intermittent failures is proposedThe SYSTEM is assumed to operate with a checkpointing and rollback/recovery method to ensure reliable  information processing 
CACM-3089

Optimal Reorganization of Distributed Space DISK Files In most DATABASE organizations, the cost of accessing the DATABASE will increase due to structural  changes caused by updates and insertionsBy reorganizing the database,the access costs can be reduced 
CACM-2816

The Notions of Consistency and Predicate Locks in a DATABASE SYSTEM In DATABASE systems, users access shared data under the assumption that the data satisfies  certain consistency constraintsThis paper defines the concepts of transaction, consistency and schedule  and shows that consistency requires that a transaction cannot request new locks after releasing a lock 
CACM-2817

Information Reference Codingdata, file, reference code, SYSTEMS analysis, information modeling, DATABASE  3 Items in business SYSTEMS have to be identified by reference codes, which can later be used  as data codes and file keys in an associated data processing SYSTEM 
CACM-2888

DATABASE Abstractions: Aggregationdata abstraction, RELATIONAL database, data type, aggregation, DATABASE design, data structure,  knowledge representation, data definition language  3 Aggregation is in troduced as an abstraction which is important in conceptualizing the real  world 
CACM-2957

Computer-Aided Analysis and Design of Information Systemscomputer-aided analysis, information systems, logical SYSTEM design, problem statement language,  problem statement analyzer, physical SYSTEM design, accurately defined systems, SYSTEMS optimization  and design algorithm  2 This paper describes the use of computer-aided analysis for the design and development of an  integrated financial MANAGEMENT SYSTEM by the Navy Material Command Support Activity (NMCSA) 
CACM-2812

QUERY:
Information retrieval articles by Gerard Salton or others about clustering, bibliographic coupling, use of citations or co-citations, the vector space model, Boolean search methods using inverted files, feedback, etc. Salton, G. 

SNIPPETS:

A VECTOR SPACE MODEL for Automatic Indexing In a document retrieval, or other pattern matching environment where stored entities (documents)  are compared with each other or with incoming patterns (search requests), it appears that the best indexing  (property) SPACE is one where each entity lies as far away from the others as possible; in these circumstances  the value of an indexing system may be expressible as a function of the density of the object space;  in particular, RETRIEVAL performance may correlate inversely with SPACE densityTypical evaluation results are shown, demonstrating the usefulness of the MODEL 
CACM-2711

Manipulation of Trees in INFORMATION Retrieval* CACM February, 1962  Salton, G 
CACM-0634

Dynamic Document ProcessingA new dynamic document environment is then outlined in which clustered files are searched and INFORMATION is retrieved following an interactive user-controlled SEARCH processThe proposed procedures provide powerful tools for INFORMATION RETRIEVAL and for the control  of dynamic library collections in which new items are continually added and old ones are retired 
CACM-2307

Data Manipulation and Programming Problemsin Automatic INFORMATION RETRIEVAL Automatic INFORMATION RETRIEVAL programs require the manipulation of a variety of different  data structures, including linear text, sparse matrices, and tree or list structuresThe main data  manipulations to be performed in automatic INFORMATION systems are first briefly reviewed 
CACM-1457

The SMART Automatic Document RETRIEVAL System-An IllustrationThe system  is characterized by the fact that several hundred different METHODS are available to analyze documents  and SEARCH requestsThis feature is used in the RETRIEVAL process by leaving the exact sequence of  operations initially unspecified, and adapting the SEARCH strategy to the needs of individual users 
CACM-1236

Effective INFORMATION RETRIEVAL Using Term Accuracy The performance of INFORMATION RETRIEVAL systems can be evaluated in a number of different  waysinformation retrieval, automatic indexing, content analysis, term accuracy, frequency weighting,  thesaurus and phrase transformations  3 
CACM-2990

INFORMATION Science in a Ph. Computer Science Program This report contains recommendations on a sample course curriculum in the general area of INFORMATION  organization and INFORMATION system design in a PhComputer Science Program 
CACM-1927

The Use of Normal Multiplication Tablesfor INFORMATION Storage and RetrievalInformation retrieval, INVERTED files, multiattribute retrieval, multilist file, normal multiplication table, queries, rapid retrieval, SPACE economy  3Several examples are given; the results with respect to the number of disk accesses and disk SPACE are compared to other common approaches 
CACM-3134

A Formal System for INFORMATION RETRIEVAL from Files A generalized file structure is provided by which the concepts of keyword, index, record, file, directory, file structure, directory decoding, and record RETRIEVAL are defined and from which some of the frequently used file structures such as INVERTED files, index-sequential files, and multilist files are derivedattribute-value pair, index, keyword, record, record address, K-pointer, K-list, file, directory, generalized file structure, INVERTED file, index-sequential-file, multilist file, description, file search, directory search, serial processing of lists, prime keyword, parallel processing of lists   3 
CACM-2114

Retrieval-Update Speed Tradeoffs Using Combined Indices In a paper in the November 1970 Communications of the ACM, VY 
CACM-2140

QUERY:
Results relating parallel complexity theory (both for PRAM's and uniform circuits). 

SNIPPETS:

The PARALLEL Execution of DO Loops Methods are developed for the PARALLEL execution of different iterations of a DO loopparallel computing, multiprocessor computers, array computers, vector computers, loops  4 
CACM-2685

Computing Connected Components on PARALLEL Computers We present a PARALLEL algorithm which uses n2 processors to find the connected components of an undirected graph with n vertices in time O(log2n)Graph theory, PARALLEL processing, algorithms, transitive closure, connected component  5 
CACM-3156

Program Structures for PARALLEL Processing Constructs for organizing and explicating PARALLEL program segments are discussed as extensions  to ALGOL 60The constructs serve as meta-commands and are motivated by equipment having multiprocessing  capability 
CACM-1158

On Shrinking Binary Picture Patterns A PARALLEL processing algorithm for shrinking binary patterns to obtain single isolated elements,  one for each pattern, is presentedThe  principal features of this method are the very small window employed (two-by-two elements), the PARALLEL  nature of the process, and the possibility of shrinking any pattern, regardless of the COMPLEXITY of  its configuration 
CACM-2401

PARALLEL Methods for Integrating Ordinary Differential Equations This paper is dedicated to the proposition that, in order to take full advantage for real-time  computations of highly PARALLEL computers as can be expected to be available in the near future, much  of numerical analysis will have to be recast in a more "parallel" formBy this is meant that serial  algorithms ought to be replaced by algorithm which consist of several subtasks which can be computed  without knowledge of the RESULTS of the other subtasks 
CACM-0950

Models for PARALLEL Processing WIthin Programs:Application to CPU:I/O and I/O:I/O Overlap Approximate queueing models for internal PARALLEL processing by individual programs in a multiprogrammed  system are developed in this paperMultiprogramming, PARALLEL processing, queueing network models, multiprocessing of computation  and I/O   4 
CACM-3059

Logic-Structure Tables Logic tables are an excellent way of developing and expressing the logic required in procedures,  operations, systems and circuitsA set of rules for writing and using logic tables is explained by  means of some simple examples 
CACM-0320

A Highly PARALLEL Algorithm for ApproximatingAll Zeros of a Polynomial with Only Real ZerosThe algorithm, which is conceptually suitable for PARALLEL computation,  determines its own starting values so that convergence to the zeros is guaranteedparallel numerical algorithms, real polynomials, real zeros, Newton's method, starting values,  guaranteed convergence  5 
CACM-2266

Procedure-Oriented Language Statements to Facilitate PARALLEL Processing Two statements are suggested which allow a programmer writing in a procedure-oriented language  to indicate sections of program which are to be executed in parallelThe statements are DO TOGETHER  and HOLD 
CACM-1262

Glypnir-A Programming Language for Illiac IVGLYPNIR, Illiac IV, Programming language, PARALLEL computation, PARALLEL architecture  4This paper describes the characteristics,  goals and philosophy of the language, and discusses some of the problems associated with PARALLEL computer  architectures 
CACM-2785

QUERY:
Algorithms for parallel computation, and especially comparisons between parallel and sequential algorithms. 

SNIPPETS:

Sorting on a Mesh-Connected PARALLEL Computer Two ALGORITHMS are presented for sorting n^2 elements on an n X n mesh-connected processor  array that require O(n) routing and comparison stepsThe ALGORITHMS of this paper are shown to be optimal in time within small constant factors 
CACM-2973

A Highly PARALLEL Algorithm for ApproximatingAll Zeros of a Polynomial with Only Real ZerosThe algorithm, which is conceptually suitable for PARALLEL computation,  determines its own starting values so that convergence to the zeros is guaranteedparallel numerical algorithms, real polynomials, real zeros, Newton's method, starting values,  guaranteed convergence  5 
CACM-2266

Fast PARALLEL Sorting ALGORITHMS A PARALLEL bucket-sort algorithm is presented that requires time O(log n) and the use of n  processorsThe algorithm makes use of a technique that requires more space than the product of processors  and time 
CACM-3075

Cellular Arrays for the Solution of Graph ProblemsThe chief computational advantage  offered by cellular arrays is the improvement in speed achieved by virtue of the possibilities for PARALLEL  processinggraph theory, cellular logic-in-memory arrays, PARALLEL processing, special purpose computers,  ALGORITHMS for distance and spanning tree problems  5 
CACM-2289

PARALLEL Methods for Integrating Ordinary Differential Equations This paper is dedicated to the proposition that, in order to take full advantage for real-time  computations of highly PARALLEL computers as can be expected to be available in the near future, much  of numerical analysis will have to be recast in a more "parallel" formBy this is meant that serial  ALGORITHMS ought to be replaced by algorithm which consist of several subtasks which can be computed  without knowledge of the results of the other subtasks 
CACM-0950

A Comparison of List Schedules for PARALLEL Processing Systemsparallel processing, precedence graphs, scheduling, list scheduling, optimization, dynamic programming  4 The problem of scheduling two or more processors to minimize the execution time of a program  which consists of a set of partially ordered tasks is studied 
CACM-2570

Computing Connected Components on PARALLEL Computers We present a PARALLEL algorithm which uses n2 processors to find the connected components of an undirected graph with n vertices in time O(log2n)Graph theory, PARALLEL processing, algorithms, transitive closure, connected component  5 
CACM-3156

Merging with PARALLEL Processors Consider two linearly ordered sets A, B, |A|=m, |B|=n, m<=n, and p, p<=m, PARALLEL processors  working synchronouslyThe paper presents an algorithm for merging A and B with the p PARALLEL processors,  which requires at most 2[log2 (2m+1)]+[3m/p] + [m/p][log2 (n/m)] steps 
CACM-2714

Control Structures in Illiac IV FortranLanguage structures to utilize  this storage method and express PARALLEL ALGORITHMS are describedarray processing, parallelism detection, explicit parallelism, array allocation, PARALLEL control  structures, ILLIAC IV Fortran  4 
CACM-2433

On the Time Required for a Sequence of Matrix ProductsThe minimum time required to evaluate such products on ordinary serial computers  as well as PARALLEL computers is discussedmatrix expressions, matrix multiplication, operation minimization, PARALLEL machine, time minimization  4 
CACM-2557

QUERY:
List all articles on EL1 and ECL (EL1 may be given as EL/1; I don't remember how they did it. 

SNIPPETS:

The Treatment of Data Types in EL1 In constructing a general purpose programming language, a key issue is providing a sufficient  set of data types and associated operations in a manner that permits both natural problem-oriented notation  and efficient implementationThe EL1 language contains a number of features specifically designed to  simultaneously satisfy both requirements 
CACM-2651

Guides to Teaching COBOL The teaching of COBOL can be divided into three main subject areasThey are the syntax of  COBOL, the use of such syntax in solving any given problem, and programming concepts 
CACM-0595

Recovery of Reentrant LIST Structures in SLIP One consequence of the reference-count-based space-recovery system employed by SLIP is that  reentrant LIST structures are not recovered even when explicitly erasedLISP-like garbage-collection  schemes are free of this impediment 
CACM-1878

BLNSYS-A 1401 Operating System with Braille CapabilitiesThis system will  perform any or all of the following users specified functions: assemble SPS source decks, post list,  produce condensed or uncondensed object decks, execute user's program, LIST card input to a program,  LIST punched output, provide a storage dump, execute a program submitted for execution as an uncondensed  object deck under debugging trace control, card-to-braille conversion, brailled listings of 7040 IBSYS  batch output, and update or duplicate the system tape itself BLNSYS is an operating system designed for a 4K 1401 with common optional features and two  attached tape drives 
CACM-1264

The "Plankalkul" of Konrad Zuse: A Forerunnerof Today's Programming Languages Plankalkul was an attempt by Korrad Zuse in the 1940's to devise a notational and conceptual  system for writing what today is termed a programAlthough this early approach to a programming language  did not lead to practical use, the plan is described here because it contains features that are standard  in today's programming languages 
CACM-2305

Requirements for Real-Time Languages Real-time languages have different requirements from other programming languages because of  the special nature of their applications, the environment in which their object programs are executed  and the environment in which they may be compiledIt may not be the language extensions that ultimately  advance developments in the field 
CACM-1459

An Algorithm for the Blocks and Cutnodes of a GraphFor both representations the time required to analyze a graph  on n nodes increases as n^G where G depends on the type of graph, 1 <= G <= 2, and both bounds are attainedThe algorithm is compared in detail with that proposed by Read for which  1 <= G <= 3 
CACM-2177

Consumer Difficulties With Computerized Transactions: An Empirical Investigation The prevalence with which errors may be encountered by the  end targets of a computerized process is assessedHow many and what type of errors occur 
CACM-3142

Further Remarks on Line Segment Curve-Fitting Using Dynamic Programming In a recent paper, Bellman showed how dynamic programming could be used to determine the solution  to a problem previously considered by StoneThe problem comprises the determination, given N, of the  N points of subdivision of a given interval (a,B) and the corresponding line segments, that give the  best least squares fit to a function g(x) in the interval 
CACM-0497

Interval Arithmetic Determinant Evaluationand Its Use in Testing for a Chebyshev System Two recent papers, one by Hansen and one by Hansen and RR 
CACM-1931

